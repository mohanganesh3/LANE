<%- include('../partials/header') %>

<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />

<style>
    .status-indicator {
        display: inline-flex;
        align-items: center;
        padding: 0.5rem 1rem;
        border-radius: 9999px;
        font-weight: 600;
        font-size: 0.875rem;
    }
    .status-indicator.live {
        background-color: #fee2e2;
        color: #991b1b;
        animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    }
    .status-indicator.stopped {
        background-color: #f3f4f6;
        color: #6b7280;
    }
    .location-card {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 1rem;
        padding: 1.5rem;
        margin-bottom: 1rem;
    }
    @keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: .7; }
    }
</style>

<div class="pt-16 min-h-screen bg-gray-50">
    <div class="container mx-auto px-4 py-6">
        <!-- Header -->
        <div class="bg-white rounded-lg shadow-md p-6 mb-6">
            <div class="flex items-center justify-between">
                <div class="flex items-center">
                    <a href="/rides/my-rides" class="text-gray-600 hover:text-primary mr-4">
                        <i class="fas fa-arrow-left text-xl"></i>
                    </a>
                    <div>
                        <h1 class="text-2xl font-bold text-gray-800">
                            <i class="fas fa-broadcast-tower text-primary mr-2"></i>
                            Live Location Control
                        </h1>
                        <p class="text-gray-600 text-sm mt-1">
                            Broadcast your location to passengers in real-time
                        </p>
                    </div>
                </div>
                <div id="liveLocationStatus" class="status-indicator stopped">
                    ⚫ Stopped
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <!-- Control Panel -->
            <div class="lg:col-span-1 space-y-6">
                <!-- Location Broadcasting Card -->
                <div class="location-card">
                    <h3 class="text-xl font-bold mb-4">
                        <i class="fas fa-satellite-dish mr-2"></i>
                        Location Broadcasting
                    </h3>
                    
                    <div class="space-y-4">
                        <div class="bg-white bg-opacity-20 rounded-lg p-4">
                            <div class="flex items-center justify-between mb-2">
                                <span class="text-sm opacity-90">Current Speed</span>
                                <span class="text-2xl font-bold"><span id="currentSpeed">0</span> km/h</span>
                            </div>
                            <div class="flex items-center justify-between">
                                <span class="text-sm opacity-90">Accuracy</span>
                                <span class="text-lg"><span id="locationAccuracy">-</span>m</span>
                            </div>
                        </div>

                        <div class="bg-white bg-opacity-20 rounded-lg p-4">
                            <div class="text-sm opacity-90 mb-1">Last Update</div>
                            <div class="font-semibold" id="lastLocationUpdate">Not started</div>
                        </div>

                        <button id="toggleBroadcastBtn" 
                                class="w-full bg-white text-purple-700 font-bold py-3 px-4 rounded-lg hover:bg-gray-100 transition">
                            <i class="fas fa-play-circle mr-2"></i>
                            Start Broadcasting
                        </button>

                        <div class="text-xs opacity-75 text-center">
                            <i class="fas fa-info-circle mr-1"></i>
                            Updates every 3 seconds while active
                        </div>
                    </div>
                </div>

                <!-- Active Passengers -->
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h3 class="font-semibold text-gray-800 mb-4">
                        <i class="fas fa-users text-primary mr-2"></i>
                        Active Passengers
                    </h3>
                    <div id="passengersConnected" class="text-center text-gray-500">
                        <i class="fas fa-wifi text-3xl mb-2 opacity-20"></i>
                        <p class="text-sm">Start broadcasting to see connected passengers</p>
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h3 class="font-semibold text-gray-800 mb-4">
                        <i class="fas fa-bolt text-yellow-500 mr-2"></i>
                        Quick Actions
                    </h3>
                    <div class="space-y-3">
                        <button onclick="centerOnMyLocation()" 
                                class="w-full bg-blue-50 hover:bg-blue-100 text-blue-700 py-2 px-4 rounded-lg transition">
                            <i class="fas fa-crosshairs mr-2"></i>
                            Center Map on Me
                        </button>
                        <button onclick="notifyPassengers()" 
                                class="w-full bg-green-50 hover:bg-green-100 text-green-700 py-2 px-4 rounded-lg transition">
                            <i class="fas fa-bell mr-2"></i>
                            Notify Passengers
                        </button>
                        <a href="/chat/<%= ride._id %>" 
                           class="block w-full bg-purple-50 hover:bg-purple-100 text-purple-700 py-2 px-4 rounded-lg transition text-center">
                            <i class="fas fa-comments mr-2"></i>
                            Open Chat
                        </a>
                    </div>
                </div>
            </div>

            <!-- Map -->
            <div class="lg:col-span-2">
                <div class="bg-white rounded-lg shadow-md overflow-hidden">
                    <div class="p-4 bg-gradient-to-r from-primary to-green-600 text-white">
                        <h3 class="font-semibold flex items-center justify-between">
                            <span>
                                <i class="fas fa-map mr-2"></i>
                                Your Location
                            </span>
                            <span class="text-sm opacity-90">
                                <i class="fas fa-route mr-1"></i>
                                <%= ride.route?.start?.name || ride.fromLocation %> → <%= ride.route?.destination?.name || ride.toLocation %>
                            </span>
                        </h3>
                    </div>
                    <div id="map" class="w-full" style="height: 600px;"></div>
                </div>

                <!-- Map Legend -->
                <div class="mt-4 bg-white rounded-lg shadow-md p-4">
                    <div class="grid grid-cols-3 gap-4 text-sm">
                        <div class="flex items-center">
                            <div class="w-6 h-6 bg-green-500 rounded-full mr-2"></div>
                            <span>Start Point</span>
                        </div>
                        <div class="flex items-center">
                            <div class="w-6 h-6 bg-red-500 rounded-full mr-2"></div>
                            <span>Destination</span>
                        </div>
                        <div class="flex items-center">
                            <div class="w-6 h-6 bg-blue-500 rounded-full mr-2"></div>
                            <span>Your Location</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<!-- Socket.IO -->
<script src="/socket.io/socket.io.js"></script>

<!-- Live Location Broadcaster -->
<script src="/js/live-location-broadcaster.js"></script>

<script>
// Configuration
const rideId = '<%= ride._id %>';
const bookingId = '<%= booking?._id || "" %>';
const userId = '<%= user._id %>';

// Map instance
let map;
let currentLocationMarker;
let breadcrumbsLayer;
let startMarker;
let endMarker;
let routeLine;

// Location broadcaster instance
let broadcaster;

// Initialize map
function initMap() {
    const fromCoords = <%- JSON.stringify(ride.route?.start?.coordinates || ride.from?.coordinates || null) %>;
    const toCoords = <%- JSON.stringify(ride.route?.destination?.coordinates || ride.to?.coordinates || null) %>;
    
    // Default center
    let center = [13.0827, 80.2707]; // Chennai default
    
    if (fromCoords && fromCoords.length === 2) {
        center = [fromCoords[1], fromCoords[0]]; // Convert [lng, lat] to [lat, lng]
    }
    
    // Create map
    map = L.map('map').setView(center, 13);
    
    // Add tile layer
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors',
        maxZoom: 19
    }).addTo(map);
    
    // Add start marker
    if (fromCoords && fromCoords.length === 2) {
        startMarker = L.marker([fromCoords[1], fromCoords[0]], {
            icon: L.icon({
                iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
                shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            })
        }).addTo(map);
        startMarker.bindPopup('<b>Start:</b> <%= ride.route?.start?.name || ride.fromLocation %>');
    }
    
    // Add end marker
    if (toCoords && toCoords.length === 2) {
        endMarker = L.marker([toCoords[1], toCoords[0]], {
            icon: L.icon({
                iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',
                shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            })
        }).addTo(map);
        endMarker.bindPopup('<b>Destination:</b> <%= ride.route?.destination?.name || ride.toLocation %>');
    }
    
    // Initialize breadcrumbs layer
    breadcrumbsLayer = L.layerGroup().addTo(map);
    
    // Fit bounds if we have start and end
    if (startMarker && endMarker) {
        const bounds = L.latLngBounds([startMarker.getLatLng(), endMarker.getLatLng()]);
        map.fitBounds(bounds, { padding: [50, 50] });
    }
    
    console.log('✅ Map initialized');
}

// Update current location on map
function updateLocationOnMap(location) {
    const { latitude, longitude, speed, accuracy } = location;
    
    if (currentLocationMarker) {
        currentLocationMarker.setLatLng([latitude, longitude]);
    } else {
        currentLocationMarker = L.marker([latitude, longitude], {
            icon: L.icon({
                iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',
                shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            })
        }).addTo(map);
    }
    
    currentLocationMarker.bindPopup(`
        <b>Your Current Location</b><br>
        Speed: ${speed || 0} km/h<br>
        Accuracy: ${Math.round(accuracy)} m<br>
        <small>${new Date().toLocaleTimeString()}</small>
    `);
    
    // Add breadcrumb
    L.circleMarker([latitude, longitude], {
        radius: 3,
        fillColor: '#3B82F6',
        color: '#3B82F6',
        weight: 1,
        opacity: 0.8,
        fillOpacity: 0.6
    }).addTo(breadcrumbsLayer);
}

// Center map on my location
function centerOnMyLocation() {
    if (currentLocationMarker) {
        map.setView(currentLocationMarker.getLatLng(), 15);
        currentLocationMarker.openPopup();
    } else {
        alert('Location not available yet. Start broadcasting first.');
    }
}

// Notify passengers
function notifyPassengers() {
    // You can implement a push notification or chat message here
    if (typeof showAlert === 'function') {
        showAlert('Feature coming soon: Send notification to all passengers', 'info');
    } else {
        alert('Feature coming soon: Send notification to all passengers');
    }
}

// Toggle broadcasting
document.getElementById('toggleBroadcastBtn').addEventListener('click', async () => {
    const btn = document.getElementById('toggleBroadcastBtn');
    
    if (!broadcaster) {
        broadcaster = new LiveLocationBroadcaster(rideId, bookingId, userId);
    }
    
    if (broadcaster.isActive) {
        // Stop broadcasting
        broadcaster.stop();
        btn.innerHTML = '<i class="fas fa-play-circle mr-2"></i>Start Broadcasting';
        btn.classList.remove('bg-red-500', 'text-white');
        btn.classList.add('bg-white', 'text-purple-700');
        document.getElementById('liveLocationStatus').className = 'status-indicator stopped';
        document.getElementById('liveLocationStatus').innerHTML = '⚫ Stopped';
    } else {
        // Start broadcasting
        btn.disabled = true;
        btn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Starting...';
        
        const result = await broadcaster.start();
        
        if (result.success) {
            btn.innerHTML = '<i class="fas fa-stop-circle mr-2"></i>Stop Broadcasting';
            btn.classList.remove('bg-white', 'text-purple-700');
            btn.classList.add('bg-red-500', 'text-white', 'hover:bg-red-600');
            document.getElementById('liveLocationStatus').className = 'status-indicator live';
            document.getElementById('liveLocationStatus').innerHTML = '🔴 Live';
            
            // Listen for location updates to update map
            setInterval(() => {
                const status = broadcaster.getStatus();
                if (status.lastLocation) {
                    updateLocationOnMap(status.lastLocation);
                }
            }, 1000);
        } else {
            alert(result.message);
            btn.innerHTML = '<i class="fas fa-play-circle mr-2"></i>Start Broadcasting';
        }
        
        btn.disabled = false;
    }
});

// Initialize on page load
document.addEventListener('DOMContentLoaded', () => {
    initMap();
    
    // Fix map rendering issue
    setTimeout(() => {
        map.invalidateSize();
    }, 250);
});

// Cleanup on page unload
window.addEventListener('beforeunload', () => {
    if (broadcaster && broadcaster.isActive) {
        broadcaster.stop();
    }
});
</script>

<%- include('../partials/footer') %>
