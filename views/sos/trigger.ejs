<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %> - LANE Carpool
    </title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Arial', sans-serif;
        }

        .sos-container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }

        .sos-button {
            width: 280px;
            height: 280px;
            border-radius: 50%;
            background: linear-gradient(145deg, #ff0000, #cc0000);
            border: 8px solid rgba(255, 255, 255, 0.3);
            box-shadow: 0 20px 60px rgba(255, 0, 0, 0.6),
                0 0 0 0 rgba(255, 0, 0, 0.7);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            margin: 0 auto;
        }

        .sos-button:hover {
            transform: scale(1.05);
            box-shadow: 0 25px 70px rgba(255, 0, 0, 0.7);
        }

        .sos-button:active {
            transform: scale(0.98);
        }

        .sos-button.activating {
            animation: sosActivate 0.5s ease-in-out;
        }

        @keyframes sosActivate {

            0%,
            100% {
                transform: scale(1);
            }

            25% {
                transform: scale(1.1);
            }

            50% {
                transform: scale(0.9);
            }

            75% {
                transform: scale(1.05);
            }
        }

        .pulse-ring {
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: 50%;
            border: 4px solid rgba(255, 0, 0, 0.5);
            animation: pulsate 2s infinite;
        }

        @keyframes pulsate {
            0% {
                transform: scale(1);
                opacity: 1;
            }

            100% {
                transform: scale(1.3);
                opacity: 0;
            }
        }

        .info-card {
            background: white;
            border-radius: 16px;
            padding: 20px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        .emergency-service {
            display: flex;
            align-items: center;
            padding: 15px;
            background: #f9fafb;
            border-radius: 12px;
            margin-bottom: 12px;
            transition: all 0.3s;
            cursor: pointer;
        }

        .emergency-service:hover {
            background: #f3f4f6;
            transform: translateX(5px);
        }

        .location-info {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 16px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .countdown {
            font-size: 48px;
            font-weight: bold;
            color: #ff0000;
            text-align: center;
            display: none;
        }

        .warning-banner {
            background: #fef2f2;
            border-left: 4px solid #ef4444;
            padding: 16px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .quick-actions {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 12px;
            margin-top: 20px;
        }

        .quick-action-btn {
            padding: 16px;
            border-radius: 12px;
            border: none;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 8px;
        }

        .quick-action-btn i {
            font-size: 24px;
        }

        .btn-police {
            background: #1e40af;
            color: white;
        }

        .btn-police:hover {
            background: #1e3a8a;
        }

        .btn-ambulance {
            background: #dc2626;
            color: white;
        }

        .btn-ambulance:hover {
            background: #b91c1c;
        }

        .btn-fire {
            background: #ea580c;
            color: white;
        }

        .btn-fire:hover {
            background: #c2410c;
        }

        .btn-contacts {
            background: #059669;
            color: white;
        }

        .btn-contacts:hover {
            background: #047857;
        }

        .shake-indicator {
            text-align: center;
            color: white;
            margin-top: 20px;
            font-size: 14px;
            opacity: 0.8;
        }

        .emergency-type-selector {
            display: none;
            background: white;
            border-radius: 16px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .emergency-type-selector.active {
            display: block;
        }

        .type-option {
            padding: 16px;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            margin-bottom: 12px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .type-option:hover {
            border-color: #667eea;
            background: #f9fafb;
        }

        .type-option.selected {
            border-color: #667eea;
            background: #eef2ff;
        }

        .type-option i {
            font-size: 24px;
            margin-right: 12px;
        }
    </style>
</head>

<body>
    <div class="sos-container">
        <!-- Header -->
        <div class="text-center mb-8 pt-6">
            <h1 class="text-4xl font-bold text-white mb-2">
                <i class="fas fa-shield-alt"></i> Emergency SOS
            </h1>
            <p class="text-white text-opacity-90">Your safety is our priority</p>
        </div>

        <!-- Warning Banner -->
        <div class="warning-banner">
            <h3 class="font-bold text-red-800 mb-2 flex items-center">
                <i class="fas fa-exclamation-triangle mr-2"></i>
                Important Notice
            </h3>
            <p class="text-sm text-red-700">
                Only use this SOS feature in real emergencies. False alerts may result in account suspension.
                Emergency services will be notified automatically if no response within 5 minutes.
            </p>
        </div>

        <!-- Location Info -->
        <div class="location-info">
            <h3 class="font-semibold mb-3 flex items-center">
                <i class="fas fa-map-marker-alt mr-2"></i>
                Current Location
            </h3>
            <p class="text-sm text-white text-opacity-90" id="locationText">
                <i class="fas fa-spinner fa-spin mr-2"></i>Getting your location...
            </p>
            <p class="text-xs text-white text-opacity-75 mt-2">
                Coordinates: <span id="coordinates">--</span>
            </p>
            <button onclick="refreshLocation()"
                class="mt-3 bg-white bg-opacity-20 hover:bg-opacity-30 px-4 py-2 rounded-lg text-sm transition">
                <i class="fas fa-sync-alt mr-2"></i>Refresh Location
            </button>
        </div>

        <!-- Emergency Type Selector -->
        <div class="emergency-type-selector" id="typeSelector">
            <h3 class="font-bold text-gray-800 mb-4">Select Emergency Type</h3>
            <div class="type-option" onclick="selectType('ACCIDENT')">
                <i class="fas fa-car-crash text-red-600"></i>
                <strong>Accident</strong> - Vehicle collision or crash
            </div>
            <div class="type-option" onclick="selectType('MEDICAL')">
                <i class="fas fa-heartbeat text-red-600"></i>
                <strong>Medical Emergency</strong> - Health issue or injury
            </div>
            <div class="type-option" onclick="selectType('THREAT')">
                <i class="fas fa-user-shield text-orange-600"></i>
                <strong>Safety Threat</strong> - Feeling unsafe or threatened
            </div>
            <div class="type-option" onclick="selectType('BREAKDOWN')">
                <i class="fas fa-wrench text-yellow-600"></i>
                <strong>Vehicle Breakdown</strong> - Car stopped working
            </div>
            <div class="type-option" onclick="selectType('OTHER')">
                <i class="fas fa-question-circle text-gray-600"></i>
                <strong>Other Emergency</strong> - Different type of emergency
            </div>
        </div>

        <!-- Main SOS Button -->
        <div class="text-center mb-8">
            <div class="countdown" id="countdown"></div>
            <button class="sos-button" id="sosButton" onclick="initiateSOSSequence()">
                <div class="pulse-ring"></div>
                <i class="fas fa-exclamation-triangle text-white text-7xl mb-4"></i>
                <span class="text-white text-3xl font-bold">SOS</span>
                <span class="text-white text-sm mt-2">PRESS & HOLD</span>
            </button>
            <div class="shake-indicator">
                <i class="fas fa-mobile-alt mr-2"></i>
                Shake device 3 times for quick SOS
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="info-card">
            <h3 class="font-bold text-gray-800 mb-4 flex items-center">
                <i class="fas fa-phone-volume mr-2 text-blue-600"></i>
                Quick Emergency Contacts
            </h3>
            <div class="quick-actions">
                <button class="quick-action-btn btn-police" onclick="callEmergencyService('100')">
                    <i class="fas fa-shield-alt"></i>
                    <span>Police</span>
                    <span class="text-sm">100</span>
                </button>
                <button class="quick-action-btn btn-ambulance" onclick="callEmergencyService('108')">
                    <i class="fas fa-ambulance"></i>
                    <span>Ambulance</span>
                    <span class="text-sm">108</span>
                </button>
                <button class="quick-action-btn btn-fire" onclick="callEmergencyService('101')">
                    <i class="fas fa-fire-extinguisher"></i>
                    <span>Fire</span>
                    <span class="text-sm">101</span>
                </button>
                <button class="quick-action-btn btn-contacts" onclick="showEmergencyContacts()">
                    <i class="fas fa-user-friends"></i>
                    <span>My Contacts</span>
                    <span class="text-sm">(<span id="contactCount">0</span>)</span>
                </button>
            </div>
        </div>

        <!-- Emergency Contacts Info -->
        <% if (user && user.emergencyContacts && user.emergencyContacts.length> 0) { %>
            <div class="info-card">
                <h3 class="font-bold text-gray-800 mb-3 flex items-center justify-between">
                    <span>
                        <i class="fas fa-user-shield mr-2 text-green-600"></i>
                        Your Emergency Contacts
                    </span>
                    <a href="/user/emergency-contacts" class="text-sm text-blue-600 hover:underline">
                        Manage
                    </a>
                </h3>
                <div class="space-y-2">
                    <% user.emergencyContacts.slice(0, 3).forEach(contact=> { %>
                        <div class="emergency-service" onclick="callContact('<%= contact.phone %>')">
                            <div class="flex-1">
                                <p class="font-semibold text-gray-800">
                                    <%= contact.name %>
                                </p>
                                <p class="text-sm text-gray-600">
                                    <%= contact.relationship || 'Emergency Contact' %> • <%= contact.phone %>
                                </p>
                            </div>
                            <i class="fas fa-phone text-green-600 text-xl"></i>
                        </div>
                        <% }); %>
                            <% if (user.emergencyContacts.length> 3) { %>
                                <p class="text-sm text-gray-500 text-center">
                                    +<%= user.emergencyContacts.length - 3 %> more contacts
                                </p>
                                <% } %>
                </div>
            </div>
            <% } else { %>
                <div class="info-card bg-yellow-50 border-2 border-yellow-200">
                    <h3 class="font-bold text-yellow-800 mb-2 flex items-center">
                        <i class="fas fa-exclamation-circle mr-2"></i>
                        No Emergency Contacts
                    </h3>
                    <p class="text-sm text-yellow-700 mb-3">
                        Add emergency contacts so they can be notified automatically during an SOS alert.
                    </p>
                    <a href="/user/emergency-contacts"
                        class="inline-block bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded-lg text-sm font-semibold transition">
                        <i class="fas fa-plus mr-2"></i>Add Emergency Contacts
                    </a>
                </div>
                <% } %>

                    <!-- Ride Info (if applicable) -->
                    <% if (ride) { %>
                        <div class="info-card bg-blue-50">
                            <h3 class="font-bold text-blue-800 mb-3 flex items-center">
                                <i class="fas fa-car mr-2"></i>
                                Current Ride Information
                            </h3>
                            <div class="space-y-2 text-sm">
                                <p><strong>From:</strong>
                                    <%= ride.origin.address %>
                                </p>
                                <p><strong>To:</strong>
                                    <%= ride.destination.address %>
                                </p>
                                <p><strong>Driver:</strong>
                                    <%= ride.rider.profile.firstName %>
                                        <%= ride.rider.profile.lastName %>
                                </p>
                                <p><strong>Vehicle:</strong>
                                    <%= ride.vehicle?.model || 'N/A' %> (<%= ride.vehicle?.registrationNumber || 'N/A'
                                            %>)
                                </p>
                            </div>
                        </div>
                        <% } %>

                            <!-- Back Button -->
                            <div class="text-center mt-6 mb-8">
                                <a href="javascript:history.back()"
                                    class="inline-block bg-white hover:bg-gray-100 text-gray-800 px-6 py-3 rounded-lg font-semibold transition">
                                    <i class="fas fa-arrow-left mr-2"></i>Go Back
                                </a>
                            </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script src="/js/sos.js"></script>
    <script>
        let currentLocation = null;
        let selectedEmergencyType = 'SOS';
        let sosButtonPressed = false;
        let pressTimer = null;
        let shakeCount = 0;
        let shakeTimer = null;
        const PRESS_DURATION = 3000; // 3 seconds

        // Initialize
        document.addEventListener('DOMContentLoaded', () => {
            getCurrentLocation();
            updateContactCount();
            setupShakeDetection();
            setupLongPress();
        });

        // Get current location
        async function getCurrentLocation() {
            if (!navigator.geolocation) {
                document.getElementById('locationText').innerHTML =
                    '<i class="fas fa-times-circle mr-2"></i>Location not available';
                return;
            }

            try {
                const position = await new Promise((resolve, reject) => {
                    navigator.geolocation.getCurrentPosition(resolve, reject, {
                        enableHighAccuracy: true,
                        timeout: 10000,
                        maximumAge: 0
                    });
                });

                currentLocation = {
                    latitude: position.coords.latitude,
                    longitude: position.coords.longitude,
                    accuracy: position.coords.accuracy
                };

                document.getElementById('coordinates').textContent =
                    `${currentLocation.latitude.toFixed(6)}, ${currentLocation.longitude.toFixed(6)}`;

                // Reverse geocode
                const address = await reverseGeocode(currentLocation.latitude, currentLocation.longitude);
                document.getElementById('locationText').innerHTML =
                    `<i class="fas fa-check-circle mr-2"></i>${address}`;

            } catch (error) {
                console.error('Location error:', error);
                document.getElementById('locationText').innerHTML =
                    '<i class="fas fa-exclamation-circle mr-2"></i>Unable to get location. Please enable GPS.';
            }
        }

        // Refresh location
        function refreshLocation() {
            document.getElementById('locationText').innerHTML =
                '<i class="fas fa-spinner fa-spin mr-2"></i>Updating location...';
            getCurrentLocation();
        }

        // Reverse geocode using Nominatim
        async function reverseGeocode(lat, lng) {
            try {
                const response = await fetch(
                    `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`
                );
                const data = await response.json();
                return data.display_name || `${lat.toFixed(4)}, ${lng.toFixed(4)}`;
            } catch (error) {
                return `${lat.toFixed(4)}, ${lng.toFixed(4)}`;
            }
        }

        // Setup long press
        function setupLongPress() {
            const button = document.getElementById('sosButton');

            button.addEventListener('mousedown', startPress);
            button.addEventListener('touchstart', startPress);
            button.addEventListener('mouseup', cancelPress);
            button.addEventListener('mouseleave', cancelPress);
            button.addEventListener('touchend', cancelPress);
            button.addEventListener('touchcancel', cancelPress);
        }

        function startPress(e) {
            if (sosButtonPressed) return;

            const button = document.getElementById('sosButton');
            const countdown = document.getElementById('countdown');
            button.classList.add('activating');

            let secondsLeft = 3;
            countdown.style.display = 'block';
            countdown.textContent = secondsLeft;

            pressTimer = setInterval(() => {
                secondsLeft--;
                countdown.textContent = secondsLeft;

                if (secondsLeft <= 0) {
                    clearInterval(pressTimer);
                    countdown.style.display = 'none';
                    triggerSOS();
                }
            }, 1000);
        }

        function cancelPress() {
            if (pressTimer) {
                clearInterval(pressTimer);
                pressTimer = null;
            }
            document.getElementById('sosButton').classList.remove('activating');
            document.getElementById('countdown').style.display = 'none';
        }

        // Initiate SOS sequence
        function initiateSOSSequence() {
            // Show type selector
            document.getElementById('typeSelector').classList.add('active');
            window.scrollTo({ top: document.getElementById('typeSelector').offsetTop - 100, behavior: 'smooth' });
        }

        // Select emergency type
        function selectType(type) {
            selectedEmergencyType = type;

            // Update UI
            document.querySelectorAll('.type-option').forEach(el => {
                el.classList.remove('selected');
            });
            event.target.closest('.type-option').classList.add('selected');

            // Wait a moment then trigger
            setTimeout(() => {
                document.getElementById('typeSelector').classList.remove('active');
                triggerSOS();
            }, 500);
        }

        // Trigger SOS
        async function triggerSOS() {
            if (sosButtonPressed) return;
            sosButtonPressed = true;

            if (!currentLocation) {
                alert('Unable to determine your location. Please enable GPS and try again.');
                sosButtonPressed = false;
                return;
            }

            const rideId = '<%= ride ? ride._id : "" %>';
            const bookingId = '<%= booking ? booking._id : "" %>';

            try {
                await triggerSOSAlert(
                    rideId || null,
                    bookingId || null,
                    selectedEmergencyType
                );
            } catch (error) {
                console.error('SOS Error:', error);
                sosButtonPressed = false;
            }
        }

        // Call emergency service
        function callEmergencyService(number) {
            if (confirm(`Call ${number} (Emergency Services)?`)) {
                window.location.href = `tel:${number}`;
            }
        }

        // Call contact
        function callContact(phone) {
            window.location.href = `tel:${phone}`;
        }

        // Show emergency contacts
        function showEmergencyContacts() {
            window.location.href = '/user/emergency-contacts';
        }

        // Update contact count
        function updateContactCount() {
            <% if (user && user.emergencyContacts) { %>
                document.getElementById('contactCount').textContent = <%= user.emergencyContacts.length %>;
            <% } %>
        }

        // Setup shake detection
        function setupShakeDetection() {
            if (!window.DeviceMotionEvent) {
                console.log('Device motion not supported');
                return;
            }

            let lastX = 0, lastY = 0, lastZ = 0;
            const SHAKE_THRESHOLD = 15;

            window.addEventListener('devicemotion', (event) => {
                const acc = event.accelerationIncludingGravity;
                if (!acc) return;

                const deltaX = Math.abs(acc.x - lastX);
                const deltaY = Math.abs(acc.y - lastY);
                const deltaZ = Math.abs(acc.z - lastZ);

                if (deltaX > SHAKE_THRESHOLD || deltaY > SHAKE_THRESHOLD || deltaZ > SHAKE_THRESHOLD) {
                    handleShake();
                }

                lastX = acc.x;
                lastY = acc.y;
                lastZ = acc.z;
            });
        }

        // Handle shake
        function handleShake() {
            shakeCount++;

            if (shakeTimer) clearTimeout(shakeTimer);

            shakeTimer = setTimeout(() => {
                shakeCount = 0;
            }, 2000);

            if (shakeCount >= 3) {
                shakeCount = 0;
                if (confirm('🚨 You shook your device 3 times. Trigger SOS alert?')) {
                    triggerSOS();
                }
            }
        }
    </script>
</body>

</html>