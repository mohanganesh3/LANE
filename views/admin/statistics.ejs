<!DOCTYPE html><!DOCTYPE html>

<html lang="en"><html lang="en">

<head><head>

    <meta charset="UTF-8">    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title><%= title %> - LANE Admin</title>    <title><%= title %> - LANE Admin</title>

    <link rel="stylesheet" href="/css/style.css">    <link rel="stylesheet" href="/css/style.css">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>

    <style>    <style>

        * {        * {

            margin: 0;            margin: 0;

            padding: 0;            padding: 0;

            box-sizing: border-box;            box-sizing: border-box;

        }        }



        body {        body {

            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;

            background: #f9fafb;            background: #f9fafb;

        }        }



        .admin-content {        .admin-content {

            padding: 30px;            padding: 30px;

        }        }



        .stats-grid {        .stats-grid {

            display: grid;            display: grid;

            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));

            gap: 20px;            gap: 20px;

            margin-bottom: 30px;            margin-bottom: 30px;

        }        }



        .stat-card {        .stat-card {

            background: white;            background: white;

            padding: 25px;            padding: 25px;

            border-radius: 12px;            border-radius: 12px;

            text-align: center;            text-align: center;

            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);

        }        }



        .stat-icon {        .stat-icon {

            width: 60px;            width: 60px;

            height: 60px;            height: 60px;

            border-radius: 50%;            border-radius: 50%;

            display: flex;            display: flex;

            align-items: center;            align-items: center;

            justify-content: center;            justify-content: center;

            margin: 0 auto 15px;            margin: 0 auto 15px;

            font-size: 24px;            font-size: 24px;

        }        }



        .stat-number {        .stat-number {

            font-size: 36px;            font-size: 36px;

            font-weight: 700;            font-weight: 700;

            color: #1f2937;            color: #1f2937;

        }        }



        .stat-label {        .stat-label {

            color: #6b7280;            color: #6b7280;

            font-size: 14px;            font-size: 14px;

            margin-top: 5px;            margin-top: 5px;

        }        }



        .stat-change {        .stat-change {

            font-size: 13px;            font-size: 13px;

            font-weight: 600;            font-weight: 600;

            margin-top: 8px;            margin-top: 8px;

        }        }



        .stat-change.positive {        .stat-change.positive {

            color: #10b981;            color: #10b981;

        }        }



        .stat-change.negative {        .stat-change.negative {

            color: #ef4444;            color: #ef4444;

        }        }



        .chart-container {        .chart-container {

            background: white;            background: white;

            padding: 25px;            padding: 25px;

            border-radius: 12px;            border-radius: 12px;

            margin-bottom: 20px;            margin-bottom: 20px;

            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);

        }        }



        .chart-wrapper {        .chart-container canvas {

            position: relative;            max-height: 400px;

            height: 300px;        }

            margin-top: 20px;

        }        .chart-wrapper {

            position: relative;

        .chart-wrapper.small {            height: 300px;

            height: 250px;            margin-top: 20px;

        }        }



        .chart-wrapper.large {        .chart-wrapper.small {

            height: 400px;            height: 250px;

        }        }



        .chart-header {        .chart-wrapper.large {

            display: flex;            height: 400px;

            justify-content: space-between;        }

            align-items: center;

            margin-bottom: 20px;        .chart-header {

        }            display: flex;

            justify-content: space-between;

        .chart-header h3 {            align-items: center;

            font-size: 20px;            margin-bottom: 20px;

            color: #1f2937;        }

        }

        .chart-header h3 {

        .time-filter {            font-size: 20px;

            display: flex;            color: #1f2937;

            gap: 10px;        }

        }

        .time-filter {

        .time-filter button {            display: flex;

            padding: 8px 16px;            gap: 10px;

            border-radius: 6px;        }

            border: 1px solid #d1d5db;

            background: white;        .time-filter button {

            cursor: pointer;            padding: 8px 16px;

            font-size: 13px;            border-radius: 6px;

            font-weight: 600;            border: 1px solid #d1d5db;

            color: #6b7280;            background: white;

            transition: all 0.3s;            cursor: pointer;

        }            font-size: 13px;

            font-weight: 600;

        .time-filter button.active {            color: #6b7280;

            background: #6366f1;            transition: all 0.3s;

            color: white;        }

            border-color: #6366f1;

        }        .time-filter button.active {

            background: #6366f1;

        .time-filter button:hover:not(.active) {            color: white;

            background: #f3f4f6;            border-color: #6366f1;

            border-color: #9ca3af;        }

        }

    </style>        .time-filter button:hover:not(.active) {

</head>            background: #f3f4f6;

<body>            border-color: #9ca3af;

    <%- include('../partials/admin-sidebar.ejs', {active: 'statistics'}) %>        }



    <div class="admin-main">        /* Ensure canvases actually fill wrapper size */

        <%- include('../partials/admin-header.ejs', {title: '📊 Analytics & Statistics', user}) %>        .chart-wrapper > canvas#userGrowthChart,

        .chart-wrapper > canvas#ridesChart,

        <div class="admin-content">        .chart-wrapper > canvas#revenueChart,

            <!-- Key Metrics -->        .chart-wrapper > canvas#routesChart {

            <div class="stats-grid">            width: 100% !important;

                <div class="stat-card" style="border-left: 4px solid #6366f1;">            height: 100% !important;

                    <div class="stat-icon" style="background: #eef2ff; color: #6366f1;">            display: block;

                        <i class="fas fa-users"></i>        }

                    </div>    </style>

                    <div class="stat-number"><%= stats.users.total %></div></head>

                    <div class="stat-label">Total Users</div><body>

                    <div class="stat-change positive">    <%- include('../partials/admin-sidebar.ejs', {active: 'statistics'}) %>

                        <i class="fas fa-arrow-up"></i> <%= stats.users.newThisMonth %> this month

                    </div>    <div class="admin-main">

                </div>        <%- include('../partials/admin-header.ejs', {title: '📊 Analytics & Statistics', user}) %>



                <div class="stat-card" style="border-left: 4px solid #10b981;">        <div class="admin-content">

                    <div class="stat-icon" style="background: #d1fae5; color: #10b981;">            <!-- Key Metrics -->

                        <i class="fas fa-car"></i>            <div class="stats-grid">

                    </div>                <div class="stat-card" style="border-left: 4px solid #6366f1;">

                    <div class="stat-number"><%= stats.rides.total %></div>                    <div class="stat-icon" style="background: #eef2ff; color: #6366f1;">

                    <div class="stat-label">Total Rides</div>                        <i class="fas fa-users"></i>

                    <div class="stat-change positive">                    </div>

                        <i class="fas fa-arrow-up"></i> <%= stats.rides.completionRate %>% completion rate                    <div class="stat-number"><%= stats.users.total %></div>

                    </div>                    <div class="stat-label">Total Users</div>

                </div>                    <div class="stat-change positive">

                        <i class="fas fa-arrow-up"></i> <%= stats.users.newThisMonth %> this month

                <div class="stat-card" style="border-left: 4px solid #f59e0b;">                    </div>

                    <div class="stat-icon" style="background: #fef3c7; color: #f59e0b;">                </div>

                        <i class="fas fa-rupee-sign"></i>

                    </div>                <div class="stat-card" style="border-left: 4px solid #10b981;">

                    <div class="stat-number">₹<%= stats.revenue.total.toLocaleString() %></div>                    <div class="stat-icon" style="background: #d1fae5; color: #10b981;">

                    <div class="stat-label">Total Revenue</div>                        <i class="fas fa-car"></i>

                    <div class="stat-change positive">                    </div>

                        <i class="fas fa-arrow-up"></i> ₹<%= stats.revenue.thisMonth.toLocaleString() %> this month                    <div class="stat-number"><%= stats.rides.total %></div>

                    </div>                    <div class="stat-label">Total Rides</div>

                </div>                    <div class="stat-change positive">

                        <i class="fas fa-arrow-up"></i> <%= stats.rides.completionRate %>% completion rate

                <div class="stat-card" style="border-left: 4px solid #8b5cf6;">                    </div>

                    <div class="stat-icon" style="background: #f3e8ff; color: #8b5cf6;">                </div>

                        <i class="fas fa-leaf"></i>

                    </div>                <div class="stat-card" style="border-left: 4px solid #f59e0b;">

                    <div class="stat-number"><%= stats.environmental.co2Saved %> kg</div>                    <div class="stat-icon" style="background: #fef3c7; color: #f59e0b;">

                    <div class="stat-label">CO₂ Saved</div>                        <i class="fas fa-rupee-sign"></i>

                    <div class="stat-change positive">                    </div>

                        <i class="fas fa-tree"></i> <%= stats.environmental.treesEquivalent %> trees equivalent                    <div class="stat-number">₹<%= stats.revenue.total.toLocaleString() %></div>

                    </div>                    <div class="stat-label">Total Revenue</div>

                </div>                    <div class="stat-change positive">

            </div>                        <i class="fas fa-arrow-up"></i> ₹<%= stats.revenue.thisMonth.toLocaleString() %> this month

                    </div>

            <!-- User Growth Chart -->                </div>

            <div class="chart-container">

                <div class="chart-header">                <div class="stat-card" style="border-left: 4px solid #8b5cf6;">

                    <h3><i class="fas fa-chart-line"></i> User Growth</h3>                    <div class="stat-icon" style="background: #f3e8ff; color: #8b5cf6;">

                    <div class="time-filter">                        <i class="fas fa-leaf"></i>

                        <button class="<%= currentRange === 'week' ? 'active' : '' %>" onclick="changeTimeRange('week')">Week</button>                    </div>

                        <button class="<%= currentRange === 'month' ? 'active' : '' %>" onclick="changeTimeRange('month')">Month</button>                    <div class="stat-number"><%= stats.environmental.co2Saved %> kg</div>

                        <button class="<%= currentRange === 'year' ? 'active' : '' %>" onclick="changeTimeRange('year')">Year</button>                    <div class="stat-label">CO₂ Saved</div>

                    </div>                    <div class="stat-change positive">

                </div>                        <i class="fas fa-tree"></i> <%= stats.environmental.treesEquivalent %> trees equivalent

                <div class="chart-wrapper small">                    </div>

                    <canvas id="userGrowthChart"></canvas>                </div>

                </div>            </div>

            </div>

            <!-- User Growth Chart -->

            <!-- Rides & Revenue Charts -->            <div class="chart-container">

            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">                <div class="chart-header">

                <div class="chart-container">                    <h3><i class="fas fa-chart-line"></i> User Growth</h3>

                    <h3 style="margin-bottom: 20px; color: #1f2937;">                    <div class="time-filter">

                        <i class="fas fa-car"></i> Rides Overview                        <button class="<%= currentRange === 'week' ? 'active' : '' %>" onclick="changeTimeRange('week')">Week</button>

                    </h3>                        <button class="<%= currentRange === 'month' ? 'active' : '' %>" onclick="changeTimeRange('month')">Month</button>

                    <div class="chart-wrapper small">                        <button class="<%= currentRange === 'year' ? 'active' : '' %>" onclick="changeTimeRange('year')">Year</button>

                        <canvas id="ridesChart"></canvas>                    </div>

                    </div>                </div>

                </div>                <div class="chart-wrapper small">

                    <canvas id="userGrowthChart"></canvas>

                <div class="chart-container">                </div>

                    <h3 style="margin-bottom: 20px; color: #1f2937;">            </div>

                        <i class="fas fa-rupee-sign"></i> Revenue Breakdown

                    </h3>            <!-- Rides & Revenue Charts -->

                    <div class="chart-wrapper small">            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">

                        <canvas id="revenueChart"></canvas>                <div class="chart-container">

                    </div>                    <h3 style="margin-bottom: 20px; color: #1f2937;">

                </div>                        <i class="fas fa-car"></i> Rides Overview

            </div>                    </h3>

                    <div class="chart-wrapper small">

            <!-- Popular Routes -->                        <canvas id="ridesChart"></canvas>

            <div class="chart-container">                    </div>

                <h3 style="margin-bottom: 20px; color: #1f2937;">                </div>

                    <i class="fas fa-route"></i> Top 10 Popular Routes

                </h3>                <div class="chart-container">

                <div class="chart-wrapper large">                    <h3 style="margin-bottom: 20px; color: #1f2937;">

                    <canvas id="routesChart"></canvas>                        <i class="fas fa-rupee-sign"></i> Revenue Breakdown

                </div>                    </h3>

            </div>                    <div class="chart-wrapper small">

                        <canvas id="revenueChart"></canvas>

            <!-- Safety Metrics -->                    </div>

            <div class="chart-container">                </div>

                <h3 style="margin-bottom: 20px; color: #1f2937;">            </div>

                    <i class="fas fa-shield-alt"></i> Safety Metrics

                </h3>            <!-- Popular Routes -->

                <div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 20px;">            <div class="chart-container">

                    <div style="text-align: center; padding: 20px; background: #f9fafb; border-radius: 8px;">                <h3 style="margin-bottom: 20px; color: #1f2937;">

                        <div style="font-size: 32px; font-weight: 700; color: #10b981;"><%= stats.safety.averageRating %></div>                    <i class="fas fa-route"></i> Top 10 Popular Routes

                        <div style="color: #6b7280; font-size: 14px; margin-top: 5px;">Average Rating</div>                </h3>

                    </div>                <div class="chart-wrapper large">

                    <div style="text-align: center; padding: 20px; background: #f9fafb; border-radius: 8px;">                    <canvas id="routesChart"></canvas>

                        <div style="font-size: 32px; font-weight: 700; color: #3b82f6;"><%= stats.safety.verifiedDrivers %>%</div>                </div>

                        <div style="color: #6b7280; font-size: 14px; margin-top: 5px;">Verified Drivers</div>            </div>

                    </div>

                    <div style="text-align: center; padding: 20px; background: #f9fafb; border-radius: 8px;">            <!-- Safety Metrics -->

                        <div style="font-size: 32px; font-weight: 700; color: #f59e0b;"><%= stats.safety.sosAlerts %></div>            <div class="chart-container">

                        <div style="color: #6b7280; font-size: 14px; margin-top: 5px;">SOS Alerts</div>                <h3 style="margin-bottom: 20px; color: #1f2937;">

                    </div>                    <i class="fas fa-shield-alt"></i> Safety Metrics

                    <div style="text-align: center; padding: 20px; background: #f9fafb; border-radius: 8px;">                </h3>

                        <div style="font-size: 32px; font-weight: 700; color: #ef4444;"><%= stats.safety.reports %></div>                <div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 20px;">

                        <div style="color: #6b7280; font-size: 14px; margin-top: 5px;">Reports</div>                    <div style="text-align: center; padding: 20px; background: #f9fafb; border-radius: 8px;">

                    </div>                        <div style="font-size: 32px; font-weight: 700; color: #10b981;"><%= stats.safety.averageRating %></div>

                </div>                        <div style="color: #6b7280; font-size: 14px; margin-top: 5px;">Average Rating</div>

            </div>                    </div>

        </div>                    <div style="text-align: center; padding: 20px; background: #f9fafb; border-radius: 8px;">

    </div>                        <div style="font-size: 32px; font-weight: 700; color: #3b82f6;"><%= stats.safety.verifiedDrivers %>%</div>

                        <div style="color: #6b7280; font-size: 14px; margin-top: 5px;">Verified Drivers</div>

    <script>                    </div>

        console.log('📊 Statistics Page - Initializing Charts');                    <div style="text-align: center; padding: 20px; background: #f9fafb; border-radius: 8px;">

                                <div style="font-size: 32px; font-weight: 700; color: #f59e0b;"><%= stats.safety.sosAlerts %></div>

        // Chart data from server                        <div style="color: #6b7280; font-size: 14px; margin-top: 5px;">SOS Alerts</div>

        const chartData = {                    </div>

            userGrowth: <%= JSON.stringify(stats.charts.userGrowth) %>,                    <div style="text-align: center; padding: 20px; background: #f9fafb; border-radius: 8px;">

            revenue: <%= JSON.stringify(stats.charts.revenue) %>,                        <div style="font-size: 32px; font-weight: 700; color: #ef4444;"><%= stats.safety.reports %></div>

            ridesOverview: <%= JSON.stringify(stats.charts.ridesOverview) %>,                        <div style="color: #6b7280; font-size: 14px; margin-top: 5px;">Reports</div>

            popularRoutes: <%= JSON.stringify(stats.charts.popularRoutes) %>                    </div>

        };                </div>

                    </div>

        console.log('📊 Chart Data:', chartData);        </div>

            </div>

        // Check if Chart.js is loaded

        if (typeof Chart === 'undefined') {    <script>

            console.error('❌ Chart.js library is not loaded!');        console.log('📊 Statistics Page - Initializing Charts');

        } else {        console.log('User Growth Data:', <%= JSON.stringify(stats.charts.userGrowth) %>);

            console.log('✅ Chart.js loaded, version:', Chart.version);        console.log('Revenue Data:', <%= JSON.stringify(stats.charts.revenue) %>);

        }        console.log('Rides Overview:', <%= JSON.stringify(stats.charts.ridesOverview) %>);

        console.log('Popular Routes:', <%= JSON.stringify(stats.charts.popularRoutes) %>);

        // Wait for DOM to be fully loaded        

        document.addEventListener('DOMContentLoaded', function() {        // Check if Chart.js is loaded

            console.log('✅ DOM loaded, initializing charts...');        if (typeof Chart === 'undefined') {

            initializeCharts();            console.error('❌ Chart.js library is not loaded!');

        });        } else {

            console.log('✅ Chart.js version:', Chart.version);

        function initializeCharts() {        }

            try {

                // User Growth Chart                        function sizeCanvasToWrapper(canvas) {

                console.log('📈 Creating User Growth Chart...');                            const parent = canvas.parentElement;

                const userGrowthCtx = document.getElementById('userGrowthChart');                            if (!parent) return;

                if (userGrowthCtx) {                            const rect = parent.getBoundingClientRect();

                    new Chart(userGrowthCtx, {                            const width = Math.max(300, rect.width || parent.clientWidth || 600);

                        type: 'line',                            const height = Math.max(200, rect.height || parent.clientHeight || 300);

                        data: {                            canvas.width = width;

                            labels: chartData.userGrowth.labels,                            canvas.height = height;

                            datasets: [{                        }

                                label: 'New Users',

                                data: chartData.userGrowth.data,                        function initCharts() {

                                borderColor: '#6366f1',                            console.log('🔧 [initCharts] Starting chart initialization...');

                                backgroundColor: 'rgba(99, 102, 241, 0.1)',                            

                                tension: 0.4,                            if (typeof Chart === 'undefined') {

                                fill: true,                                console.warn('⚠️ [initCharts] Chart.js not loaded yet');

                                borderWidth: 3,                                return false;

                                pointRadius: 5,                            }

                                pointHoverRadius: 7,                            console.log('✅ [initCharts] Chart.js is available');

                                pointBackgroundColor: '#6366f1',

                                pointBorderColor: '#fff',                            const userGrowthCanvas = document.getElementById('userGrowthChart');

                                pointBorderWidth: 2                            const ridesCanvas = document.getElementById('ridesChart');

                            }]                            const revenueCanvas = document.getElementById('revenueChart');

                        },                            const routesCanvas = document.getElementById('routesChart');

                        options: {

                            responsive: true,                            if (!userGrowthCanvas || !ridesCanvas || !revenueCanvas || !routesCanvas) {

                            maintainAspectRatio: false,                                console.warn('⚠️ [initCharts] One or more chart canvases not found');

                            plugins: {                                console.log('Canvases found:', {

                                legend: {                                    userGrowth: !!userGrowthCanvas,

                                    display: true,                                    rides: !!ridesCanvas,

                                    position: 'top',                                    revenue: !!revenueCanvas,

                                    labels: {                                    routes: !!routesCanvas

                                        padding: 15,                                });

                                        font: { size: 12 },                                return false;

                                        usePointStyle: true                            }

                                    }                            console.log('✅ [initCharts] All canvases found');

                                },

                                tooltip: {                            // Explicitly size canvases to avoid zero-height draws

                                    enabled: true,                            [userGrowthCanvas, ridesCanvas, revenueCanvas, routesCanvas].forEach(sizeCanvasToWrapper);

                                    backgroundColor: 'rgba(0, 0, 0, 0.8)',

                                    padding: 12,                                        const userGrowthCtx = userGrowthCanvas.getContext('2d');

                                    titleFont: { size: 14 },                                        const ridesCtx = ridesCanvas.getContext('2d');

                                    bodyFont: { size: 13 }                                        const revenueCtx = revenueCanvas.getContext('2d');

                                }                                        const routesCtx = routesCanvas.getContext('2d');

                            },

                            scales: {                                        if (!userGrowthCtx || !ridesCtx || !revenueCtx || !routesCtx) {

                                y: {                                            console.warn('One or more 2D contexts could not be acquired');

                                    beginAtZero: true,                                            return false;

                                    ticks: {                                        }

                                        stepSize: 1,

                                        font: { size: 12 }                                // User Growth Chart

                                    },                                console.log('📈 [initCharts] Creating User Growth chart...');

                                    grid: {                                try {

                                        color: 'rgba(0, 0, 0, 0.05)'                                const userGrowthChart = new Chart(userGrowthCtx, {

                                    }            type: 'line',

                                },            data: {

                                x: {                labels: <%= JSON.stringify(stats.charts.userGrowth.labels) %>,

                                    ticks: {                datasets: [{

                                        font: { size: 12 }                    label: 'New Users',

                                    },                    data: <%= JSON.stringify(stats.charts.userGrowth.data) %>,

                                    grid: {                    borderColor: '#6366f1',

                                        display: false                    backgroundColor: 'rgba(99, 102, 241, 0.1)',

                                    }                    tension: 0.4,

                                }                    fill: true,

                            }                    borderWidth: 3,

                        }                    pointRadius: 5,

                    });                    pointHoverRadius: 7

                    console.log('✅ User Growth Chart created');                }]

                } else {            },

                    console.error('❌ User Growth Chart canvas not found');            options: {

                }                responsive: true,

                maintainAspectRatio: false,

                // Rides Overview Chart (Doughnut)                plugins: {

                console.log('🚗 Creating Rides Overview Chart...');                    legend: {

                const ridesCtx = document.getElementById('ridesChart');                        display: true,

                if (ridesCtx) {                        position: 'top'

                    new Chart(ridesCtx, {                    },

                        type: 'doughnut',                    title: {

                        data: {                        display: false

                            labels: chartData.ridesOverview.labels,                    },

                            datasets: [{                    tooltip: {

                                data: chartData.ridesOverview.data,                        enabled: true,

                                backgroundColor: [                        backgroundColor: 'rgba(0, 0, 0, 0.8)',

                                    '#10b981', // COMPLETED - Green                        padding: 12,

                                    '#3b82f6', // IN_PROGRESS - Blue                        titleFont: { size: 14 },

                                    '#ef4444', // CANCELLED - Red                        bodyFont: { size: 13 }

                                    '#f59e0b'  // Other - Orange                    }

                                ],                },

                                borderWidth: 2,                scales: {

                                borderColor: '#ffffff'                    y: {

                            }]                        beginAtZero: true,

                        },                        ticks: {

                        options: {                            stepSize: 1,

                            responsive: true,                            font: { size: 12 }

                            maintainAspectRatio: false,                        },

                            plugins: {                        grid: {

                                legend: {                            color: 'rgba(0, 0, 0, 0.05)'

                                    display: true,                        }

                                    position: 'bottom',                    },

                                    labels: {                    x: {

                                        padding: 15,                        ticks: {

                                        font: { size: 12 },                            font: { size: 12 }

                                        usePointStyle: true                        },

                                    }                        grid: {

                                },                            display: false

                                tooltip: {                        }

                                    enabled: true,                    }

                                    backgroundColor: 'rgba(0, 0, 0, 0.8)',                }

                                    padding: 12,                                    }

                                    callbacks: {                                });

                                        label: function(context) {                                console.log('✅ [initCharts] User Growth chart created successfully');

                                            const label = context.label || '';                                } catch (err) {

                                            const value = context.parsed || 0;                                    console.error('❌ [initCharts] User Growth chart failed:', err);

                                            const total = context.dataset.data.reduce((a, b) => a + b, 0);                                    userGrowthCanvas.closest('.chart-container').insertAdjacentHTML('beforeend', '<div style="color:#ef4444; padding-top:8px;">Failed to render User Growth chart.</div>');

                                            const percentage = ((value / total) * 100).toFixed(1);                                }

                                            return `${label}: ${value} (${percentage}%)`;

                                        }                    // Rides Chart (Doughnut)

                                    }                                console.log('🚗 [initCharts] Creating Rides chart...');

                                }                                try {

                            }                                const ridesChart = new Chart(ridesCtx, {

                        }            type: 'doughnut',

                    });            data: {

                    console.log('✅ Rides Overview Chart created');                labels: <%= JSON.stringify(stats.charts.ridesOverview.labels) %>,

                } else {                datasets: [{

                    console.error('❌ Rides Chart canvas not found');                    data: <%= JSON.stringify(stats.charts.ridesOverview.data) %>,

                }                    backgroundColor: [

                        '#10b981', // COMPLETED - Green

                // Revenue Chart (Bar)                        '#3b82f6', // IN_PROGRESS - Blue

                console.log('💰 Creating Revenue Chart...');                        '#ef4444', // CANCELLED - Red

                const revenueCtx = document.getElementById('revenueChart');                        '#f59e0b'  // Other - Orange

                if (revenueCtx) {                    ],

                    new Chart(revenueCtx, {                    borderWidth: 2,

                        type: 'bar',                    borderColor: '#ffffff'

                        data: {                }]

                            labels: chartData.revenue.labels,            },

                            datasets: [{            options: {

                                label: 'Revenue (₹)',                responsive: true,

                                data: chartData.revenue.data,                maintainAspectRatio: false,

                                backgroundColor: '#f59e0b',                plugins: {

                                borderColor: '#d97706',                    legend: {

                                borderWidth: 1,                        display: true,

                                borderRadius: 6                        position: 'bottom',

                            }]                        labels: {

                        },                            padding: 15,

                        options: {                            font: { size: 12 },

                            responsive: true,                            usePointStyle: true

                            maintainAspectRatio: false,                        }

                            plugins: {                    },

                                legend: {                    tooltip: {

                                    display: true,                        enabled: true,

                                    position: 'top',                        backgroundColor: 'rgba(0, 0, 0, 0.8)',

                                    labels: {                        padding: 12,

                                        padding: 15,                        callbacks: {

                                        font: { size: 12 },                            label: function(context) {

                                        usePointStyle: true                                const label = context.label || '';

                                    }                                const value = context.parsed || 0;

                                },                                const total = context.dataset.data.reduce((a, b) => a + b, 0);

                                tooltip: {                                const percentage = ((value / total) * 100).toFixed(1);

                                    enabled: true,                                return `${label}: ${value} (${percentage}%)`;

                                    backgroundColor: 'rgba(0, 0, 0, 0.8)',                            }

                                    padding: 12,                        }

                                    callbacks: {                    }

                                        label: function(context) {                }

                                            return 'Revenue: ₹' + context.parsed.y.toLocaleString();                                    }

                                        }                                });

                                    }                                console.log('✅ [initCharts] Rides chart created successfully');

                                }                                } catch (err) {

                            },                                    console.error('❌ [initCharts] Rides Overview chart failed:', err);

                            scales: {                                    ridesCanvas.closest('.chart-container').insertAdjacentHTML('beforeend', '<div style="color:#ef4444; padding-top:8px;">Failed to render Rides Overview chart.</div>');

                                y: {                                }

                                    beginAtZero: true,

                                    ticks: {                    // Revenue Chart (Bar)

                                        callback: function(value) {                                console.log('💰 [initCharts] Creating Revenue chart...');

                                            return '₹' + value.toLocaleString();                                try {

                                        },                                new Chart(revenueCtx, {

                                        font: { size: 12 }            type: 'bar',

                                    },            data: {

                                    grid: {                labels: <%= JSON.stringify(stats.charts.revenue.labels) %>,

                                        color: 'rgba(0, 0, 0, 0.05)'                datasets: [{

                                    }                    label: 'Revenue (₹)',

                                },                    data: <%= JSON.stringify(stats.charts.revenue.data) %>,

                                x: {                    backgroundColor: '#f59e0b',

                                    ticks: {                    borderColor: '#d97706',

                                        font: { size: 12 }                    borderWidth: 1,

                                    },                    borderRadius: 6

                                    grid: {                }]

                                        display: false            },

                                    }            options: {

                                }                responsive: true,

                            }                maintainAspectRatio: false,

                        }                plugins: {

                    });                    legend: {

                    console.log('✅ Revenue Chart created');                        display: true,

                } else {                        position: 'top'

                    console.error('❌ Revenue Chart canvas not found');                    },

                }                    tooltip: {

                        enabled: true,

                // Popular Routes Chart (Horizontal Bar)                        backgroundColor: 'rgba(0, 0, 0, 0.8)',

                console.log('🗺️ Creating Popular Routes Chart...');                        padding: 12,

                const routesCtx = document.getElementById('routesChart');                        callbacks: {

                if (routesCtx) {                            label: function(context) {

                    new Chart(routesCtx, {                                return 'Revenue: ₹' + context.parsed.y.toLocaleString();

                        type: 'bar',                            }

                        data: {                        }

                            labels: chartData.popularRoutes.labels,                    }

                            datasets: [{                },

                                label: 'Number of Rides',                scales: {

                                data: chartData.popularRoutes.data,                    y: {

                                backgroundColor: '#8b5cf6',                        beginAtZero: true,

                                borderColor: '#7c3aed',                        ticks: {

                                borderWidth: 1,                            callback: function(value) {

                                borderRadius: 6                                return '₹' + value.toLocaleString();

                            }]                            },

                        },                            font: { size: 12 }

                        options: {                        },

                            indexAxis: 'y',                        grid: {

                            responsive: true,                            color: 'rgba(0, 0, 0, 0.05)'

                            maintainAspectRatio: false,                        }

                            plugins: {                    },

                                legend: {                    x: {

                                    display: true,                        ticks: {

                                    position: 'top',                            font: { size: 12 }

                                    labels: {                        },

                                        padding: 15,                        grid: {

                                        font: { size: 12 },                            display: false

                                        usePointStyle: true                        }

                                    }                    }

                                },                }

                                tooltip: {                                    }

                                    enabled: true,                                });

                                    backgroundColor: 'rgba(0, 0, 0, 0.8)',                                console.log('✅ [initCharts] Revenue chart created successfully');

                                    padding: 12                                } catch (err) {

                                }                                    console.error('❌ [initCharts] Revenue chart failed:', err);

                            },                                    revenueCanvas.closest('.chart-container').insertAdjacentHTML('beforeend', '<div style="color:#ef4444; padding-top:8px;">Failed to render Revenue chart.</div>');

                            scales: {                                }

                                x: {

                                    beginAtZero: true,                    // Routes Chart (Horizontal Bar)

                                    ticks: {                                console.log('🗺️ [initCharts] Creating Popular Routes chart...');

                                        stepSize: 1,                                try {

                                        font: { size: 12 }                                new Chart(routesCtx, {

                                    },            type: 'bar',

                                    grid: {            data: {

                                        color: 'rgba(0, 0, 0, 0.05)'                labels: <%= JSON.stringify(stats.charts.popularRoutes.labels) %>,

                                    }                datasets: [{

                                },                    label: 'Number of Rides',

                                y: {                    data: <%= JSON.stringify(stats.charts.popularRoutes.data) %>,

                                    ticks: {                    backgroundColor: '#8b5cf6',

                                        font: { size: 11 },                    borderColor: '#7c3aed',

                                        autoSkip: false                    borderWidth: 1,

                                    },                    borderRadius: 6

                                    grid: {                }]

                                        display: false            },

                                    }            options: {

                                }                indexAxis: 'y',

                            }                responsive: true,

                        }                maintainAspectRatio: false,

                    });                plugins: {

                    console.log('✅ Popular Routes Chart created');                    legend: {

                } else {                        display: true,

                    console.error('❌ Routes Chart canvas not found');                        position: 'top'

                }                    },

                    tooltip: {

                console.log('✅✅✅ All charts initialized successfully!');                        enabled: true,

            } catch (error) {                        backgroundColor: 'rgba(0, 0, 0, 0.8)',

                console.error('❌ Error initializing charts:', error);                        padding: 12

            }                    }

        }                },

                scales: {

        function changeTimeRange(range) {                    x: {

            window.location.href = `/admin/statistics?range=${range}`;                        beginAtZero: true,

        }                        ticks: {

    </script>                            stepSize: 1,

</body>                            font: { size: 12 }

</html>                        },

                        grid: {
                            color: 'rgba(0, 0, 0, 0.05)'
                        }
                    },
                    y: {
                        ticks: {
                            font: { size: 11 },
                            autoSkip: false
                        },
                        grid: {
                            display: false
                        }
                    }
                }
                                    }
                                });
                                console.log('✅ [initCharts] Popular Routes chart created successfully');
                                } catch (err) {
                                    console.error('❌ [initCharts] Popular Routes chart failed:', err);
                                    routesCanvas.closest('.chart-container').insertAdjacentHTML('beforeend', '<div style="color:#ef4444; padding-top:8px;">Failed to render Popular Routes chart.</div>');
                                }

                                console.log('✅✅✅ All charts initialized successfully');
                                return true;
                }

                            // Initialize charts after DOM and styles are ready, with retries for safety
                            (function initWithRetry() {
                                let tries = 0;
                                const maxTries = 20; // ~5s
                                const timer = setInterval(() => {
                                    tries++;
                                    const ok = initCharts();
                                    if (ok || tries >= maxTries) {
                                        clearInterval(timer);
                                        if (!ok) console.warn('Charts failed to initialize after retries');
                                    }
                                }, 250);
                            })();

        function changeTimeRange(range) {
            // Reload with new range (server will render proper range and data)
            window.location.href = `/admin/statistics?range=${range}`;
        }
    </script>
</body>
</html>
