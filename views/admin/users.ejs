<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - LANE Admin</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #f9fafb;
        }

        .admin-content {
            padding: 30px;
        }

        .btn {
            padding: 10px 20px;
            border-radius: 8px;
            border: none;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            transition: all 0.3s;
        }

        .btn-primary {
            background: #6366f1;
            color: white;
        }

        .btn-primary:hover {
            background: #4f46e5;
        }

        .badge {
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }

        .badge-primary {
            background: #dbeafe;
            color: #1e40af;
        }

        .badge-success {
            background: #d1fae5;
            color: #065f46;
        }

        .badge-danger {
            background: #fee2e2;
            color: #991b1b;
        }

        .badge-warning {
            background: #fef3c7;
            color: #92400e;
        }

        .recent-section {
            background: white;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .recent-section h3 {
            font-size: 20px;
            color: #1f2937;
            margin-bottom: 20px;
        }
        
        .filter-bar {
            background: white;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
            align-items: end;
        }

        .filter-group {
            flex: 1;
            min-width: 200px;
        }

        .filter-group label {
            display: block;
            font-size: 14px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
        }

        .filter-group select,
        .filter-group input {
            width: 100%;
            padding: 10px;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            font-size: 14px;
        }

        .user-card {
            background: white;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 20px;
            transition: all 0.3s;
            border: 1px solid #e5e7eb;
        }

        .user-card:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }

        .user-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            object-fit: cover;
        }

        .user-info {
            flex: 1;
        }

        .user-name {
            font-size: 18px;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 5px;
        }

        .user-meta {
            display: flex;
            gap: 15px;
            font-size: 13px;
            color: #6b7280;
        }

        .user-actions {
            display: flex;
            gap: 10px;
        }

        .action-btn {
            padding: 8px 16px;
            border-radius: 6px;
            border: none;
            cursor: pointer;
            font-size: 13px;
            font-weight: 600;
            transition: all 0.3s;
        }

        .btn-view {
            background: #3b82f6;
            color: white;
        }

        .btn-suspend {
            background: #f59e0b;
            color: white;
        }

        .btn-activate {
            background: #10b981;
            color: white;
        }

        .btn-delete {
            background: #ef4444;
            color: white;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 9999;
            align-items: center;
            justify-content: center;
        }

        .modal.active {
            display: flex;
        }

        .modal-content {
            background: white;
            padding: 30px;
            border-radius: 16px;
            max-width: 600px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .modal-header h2 {
            font-size: 24px;
            color: #1f2937;
        }

        .close-modal {
            font-size: 24px;
            cursor: pointer;
            color: #6b7280;
        }

        .detail-row {
            display: flex;
            padding: 12px 0;
            border-bottom: 1px solid #e5e7eb;
        }

        .detail-label {
            font-weight: 600;
            color: #374151;
            width: 150px;
        }

        .detail-value {
            color: #6b7280;
            flex: 1;
        }
    </style>
</head>
<body>
    <%- include('../partials/admin-sidebar.ejs', {active: 'users'}) %>

    <div class="admin-main">
        <%- include('../partials/admin-header.ejs', {title: 'Users Management', user}) %>

        <div class="admin-content">
            <!-- Filter Bar -->
            <div class="filter-bar">
                <div class="filter-group">
                    <label>Search</label>
                    <input type="text" id="searchInput" placeholder="Name, email, phone...">
                </div>
                <div class="filter-group">
                    <label>Role</label>
                    <select id="roleFilter">
                        <option value="all">All Roles</option>
                        <option value="RIDER">Riders</option>
                        <option value="PASSENGER">Passengers</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label>Status</label>
                    <select id="statusFilter">
                        <option value="all">All Status</option>
                        <option value="ACTIVE">Active</option>
                        <option value="SUSPENDED">Suspended</option>
                        <option value="DELETED">Deleted</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label>&nbsp;</label>
                    <button class="btn btn-primary" onclick="applyFilters()">
                        <i class="fas fa-search"></i> Search
                    </button>
                </div>
            </div>

            <!-- Users List -->
            <div class="recent-section">
                <h3><i class="fas fa-users"></i> All Users (<span id="totalCount"><%= users.length %></span>)</h3>
                
                <div id="usersList">
                    <% users.forEach(user => { %>
                        <div class="user-card">
                            <img src="<%= user.profile.photo || '/images/default-avatar.png' %>" 
                                 alt="<%= user.profile.firstName %>" 
                                 class="user-avatar">
                            
                            <div class="user-info">
                                <div class="user-name">
                                    <%= user.profile.firstName %> <%= user.profile.lastName %>
                                </div>
                                <div class="user-meta">
                                    <span><i class="fas fa-envelope"></i> <%= user.email %></span>
                                    <span><i class="fas fa-phone"></i> <%= user.phone %></span>
                                    <span>
                                        <% if (user.role === 'RIDER') { %>
                                            <span class="badge badge-primary"><i class="fas fa-car"></i> Rider</span>
                                        <% } else { %>
                                            <span class="badge badge-success"><i class="fas fa-user"></i> Passenger</span>
                                        <% } %>
                                    </span>
                                    <span>
                                        <% if (user.accountStatus === 'ACTIVE') { %>
                                            <span class="badge badge-success">Active</span>
                                        <% } else if (user.accountStatus === 'SUSPENDED') { %>
                                            <span class="badge badge-danger">Suspended</span>
                                        <% } else { %>
                                            <span class="badge badge-warning"><%= user.accountStatus %></span>
                                        <% } %>
                                    </span>
                                </div>
                            </div>

                            <div class="user-actions">
                                <button class="action-btn btn-view" onclick="viewUser('<%= user._id %>')">
                                    <i class="fas fa-eye"></i> View
                                </button>
                                
                                <% if (user.accountStatus === 'ACTIVE') { %>
                                    <button class="action-btn btn-suspend" onclick="suspendUser('<%= user._id %>')">
                                        <i class="fas fa-ban"></i> Suspend
                                    </button>
                                <% } else if (user.accountStatus === 'SUSPENDED') { %>
                                    <button class="action-btn btn-activate" onclick="activateUser('<%= user._id %>')">
                                        <i class="fas fa-check"></i> Activate
                                    </button>
                                <% } %>
                                
                                <button class="action-btn btn-delete" onclick="deleteUser('<%= user._id %>')">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            </div>
                        </div>
                    <% }); %>
                </div>

                <!-- Pagination -->
                <% if (pagination.pages > 1) { %>
                    <div style="display: flex; justify-content: center; gap: 10px; margin-top: 30px;">
                        <% for (let i = 1; i <= pagination.pages; i++) { %>
                            <a href="?page=<%= i %>&role=<%= filters.role %>&status=<%= filters.status %>&search=<%= filters.search %>" 
                               class="btn <%= i === pagination.page ? 'btn-primary' : '' %>" 
                               style="padding: 8px 16px;">
                                <%= i %>
                            </a>
                        <% } %>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <!-- User Details Modal -->
    <div id="userModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>User Details</h2>
                <span class="close-modal" onclick="closeModal()">&times;</span>
            </div>
            <div id="modalBody">
                <!-- Content loaded via AJAX -->
            </div>
        </div>
    </div>

    <script>
        // Apply Filters
        function applyFilters() {
            const search = document.getElementById('searchInput').value;
            const role = document.getElementById('roleFilter').value;
            const status = document.getElementById('statusFilter').value;
            
            window.location.href = `/admin/users?search=${search}&role=${role}&status=${status}`;
        }

        // View User Details
        async function viewUser(userId) {
            const modal = document.getElementById('userModal');
            const modalBody = document.getElementById('modalBody');
            
            modalBody.innerHTML = '<p style="text-align: center;"><i class="fas fa-spinner fa-spin"></i> Loading...</p>';
            modal.classList.add('active');
            
            // Helper function to escape HTML and prevent XSS
            const escapeHtml = (str) => {
                if (!str) return '';
                const div = document.createElement('div');
                div.textContent = str;
                return div.innerHTML;
            };
            
            try {
                const response = await fetch(`/admin/users/${userId}`);
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const data = await response.json();
                
                if (data.success) {
                    const user = data.user;
                    // Use escapeHtml for all user-controlled data to prevent XSS
                    modalBody.innerHTML = `
                        <div class="detail-row">
                            <div class="detail-label">Name:</div>
                            <div class="detail-value">${escapeHtml(user.profile.firstName)} ${escapeHtml(user.profile.lastName)}</div>
                        </div>
                        <div class="detail-row">
                            <div class="detail-label">Email:</div>
                            <div class="detail-value">${escapeHtml(user.email)}</div>
                        </div>
                        <div class="detail-row">
                            <div class="detail-label">Phone:</div>
                            <div class="detail-value">${escapeHtml(user.phone)}</div>
                        </div>
                        <div class="detail-row">
                            <div class="detail-label">Role:</div>
                            <div class="detail-value">${escapeHtml(user.role)}</div>
                        </div>
                        <div class="detail-row">
                            <div class="detail-label">Status:</div>
                            <div class="detail-value">${escapeHtml(user.accountStatus)}</div>
                        </div>
                        <div class="detail-row">
                            <div class="detail-label">Joined:</div>
                            <div class="detail-value">${new Date(user.createdAt).toLocaleDateString()}</div>
                        </div>
                        <div class="detail-row">
                            <div class="detail-label">Total Rides:</div>
                            <div class="detail-value">${parseInt(user.stats?.totalRides || 0)}</div>
                        </div>
                        <div class="detail-row">
                            <div class="detail-label">Rating:</div>
                            <div class="detail-value">${parseFloat(user.rating?.overall || 0).toFixed(1)} ⭐</div>
                        </div>
                    `;
                } else {
                    modalBody.innerHTML = `<p style="color: red;">Error: ${escapeHtml(data.message || 'Failed to load user details')}</p>`;
                }
            } catch (error) {
                console.error('Error loading user details:', error);
                modalBody.innerHTML = `<p style="color: red;">Error loading user details: ${escapeHtml(error.message)}</p>`;
            }
        }

        // Suspend User
        async function suspendUser(userId) {
            const reason = prompt('Reason for suspension:');
            if (!reason) return;
            
            if (!confirm('Are you sure you want to suspend this user?')) return;
            
            try {
                const response = await fetch(`/admin/users/${userId}/suspend`, {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({ reason })
                });
                
                const data = await response.json();
                if (data.success) {
                    alert('User suspended successfully');
                    window.location.reload();
                }
            } catch (error) {
                alert('Error suspending user');
            }
        }

        // Activate User (With Appeal Notes)
        async function activateUser(userId) {
            const appealNotes = prompt('Enter notes about why you are reactivating this account (will be sent to user):');
            if (!appealNotes) return;
            
            if (!confirm('Are you sure you want to reactivate this user? They will receive an email notification.')) return;
            
            try {
                const response = await fetch(`/admin/users/${userId}/activate`, {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({ appealNotes })
                });
                
                const data = await response.json();
                if (data.success) {
                    alert('User reactivated successfully! Email notification sent.');
                    window.location.reload();
                }
            } catch (error) {
                alert('Error reactivating user');
            }
        }

        // Delete User
        async function deleteUser(userId) {
            if (!confirm('Are you sure you want to DELETE this user? This action cannot be undone!')) return;
            
            try {
                const response = await fetch(`/admin/users/${userId}`, {
                    method: 'DELETE'
                });
                
                const data = await response.json();
                if (data.success) {
                    alert('User deleted successfully');
                    window.location.reload();
                }
            } catch (error) {
                alert('Error deleting user');
            }
        }

        // Close Modal
        function closeModal() {
            document.getElementById('userModal').classList.remove('active');
        }

        // Search on Enter
        document.getElementById('searchInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                applyFilters();
            }
        });
    </script>
</body>
</html>
