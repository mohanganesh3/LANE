<!-- Admin Header -->
<div style="
    background: white;
    padding: 20px 30px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #e5e7eb;
">
    <div>
        <h2 style="font-size: 28px; color: #1f2937; margin: 0; font-weight: 700;">
            <%= title %>
        </h2>
    </div>

    <div style="display: flex; align-items: center; gap: 20px;">
        <!-- Notifications -->
        <div style="position: relative;" id="notificationContainer">
            <button onclick="toggleNotifications()" style="
                background: none;
                border: none;
                font-size: 20px;
                color: #6b7280;
                cursor: pointer;
                position: relative;
            " id="notificationBtn">
                <i class="fas fa-bell"></i>
                <span style="
                    position: absolute;
                    top: -5px;
                    right: -5px;
                    background: #ef4444;
                    color: white;
                    font-size: 10px;
                    padding: 2px 6px;
                    border-radius: 10px;
                " id="notificationCount">0</span>
            </button>
            
            <!-- Notification Dropdown -->
            <div id="notificationDropdown" style="
                display: none;
                position: absolute;
                top: 50px;
                right: 0;
                background: white;
                border-radius: 10px;
                box-shadow: 0 10px 40px rgba(0,0,0,0.15);
                width: 350px;
                max-height: 500px;
                overflow-y: auto;
                z-index: 1000;
            ">
                <div style="padding: 15px; border-bottom: 1px solid #e5e7eb;">
                    <h3 style="margin: 0; font-size: 16px; color: #1f2937;">Notifications</h3>
                </div>
                <div id="notificationList" style="padding: 0;">
                    <!-- Notifications will be loaded here -->
                    <div style="padding: 40px 20px; text-align: center; color: #9ca3af;">
                        <i class="fas fa-bell-slash" style="font-size: 48px; margin-bottom: 10px;"></i>
                        <p>No new notifications</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Admin Profile -->
        <div style="display: flex; align-items: center; gap: 12px;">
            <img src="<%= user.profile.photo || '/images/default-avatar.png' %>" 
                 alt="Admin" 
                 style="width: 40px; height: 40px; border-radius: 50%; object-fit: cover;">
            <div>
                <div style="font-weight: 600; color: #1f2937; font-size: 14px;">
                    <%= user.profile.firstName %> <%= user.profile.lastName %>
                </div>
                <div style="font-size: 12px; color: #6b7280;">
                    Administrator
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let notificationsOpen = false;

    function toggleNotifications() {
        const dropdown = document.getElementById('notificationDropdown');
        notificationsOpen = !notificationsOpen;
        
        if (notificationsOpen) {
            dropdown.style.display = 'block';
            loadNotifications();
        } else {
            dropdown.style.display = 'none';
        }
    }

    async function loadNotifications() {
        try {
            const response = await fetch('/admin/notifications');
            const data = await response.json();
            
            if (data.success && data.notifications.length > 0) {
                displayNotifications(data.notifications);
                updateNotificationCount(data.unreadCount);
            }
        } catch (error) {
            console.error('Failed to load notifications:', error);
        }
    }

    function displayNotifications(notifications) {
        const list = document.getElementById('notificationList');
        
        list.innerHTML = notifications.map(notif => `
            <div style="
                padding: 15px;
                border-bottom: 1px solid #e5e7eb;
                cursor: pointer;
                transition: background 0.2s;
                ${!notif.read ? 'background: #f0f9ff;' : ''}
            " onmouseover="this.style.background='#f9fafb'" 
               onmouseout="this.style.background='${!notif.read ? '#f0f9ff' : 'white'}'"
               onclick="markAsRead('${notif._id}')">
                <div style="display: flex; gap: 10px;">
                    <div style="
                        width: 40px;
                        height: 40px;
                        background: ${getNotificationColor(notif.type)};
                        border-radius: 50%;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        color: white;
                        font-size: 18px;
                    ">
                        <i class="${getNotificationIcon(notif.type)}"></i>
                    </div>
                    <div style="flex: 1;">
                        <div style="font-weight: 600; color: #1f2937; margin-bottom: 4px;">
                            ${notif.title}
                        </div>
                        <div style="font-size: 13px; color: #6b7280; margin-bottom: 4px;">
                            ${notif.message}
                        </div>
                        <div style="font-size: 11px; color: #9ca3af;">
                            ${getTimeAgo(notif.createdAt)}
                        </div>
                    </div>
                    ${!notif.read ? '<div style="width: 8px; height: 8px; background: #3b82f6; border-radius: 50%;"></div>' : ''}
                </div>
            </div>
        `).join('');
    }

    function updateNotificationCount(count) {
        const badge = document.getElementById('notificationCount');
        badge.textContent = count;
        badge.style.display = count > 0 ? 'block' : 'none';
    }

    function getNotificationIcon(type) {
        const icons = {
            'SOS_ALERT': 'fas fa-exclamation-triangle',
            'VERIFICATION_APPROVED': 'fas fa-check-circle',
            'VERIFICATION_REJECTED': 'fas fa-times-circle',
            'ACCOUNT_SUSPENDED': 'fas fa-ban',
            'WARNING': 'fas fa-exclamation-circle',
            'REPORT_RESOLVED': 'fas fa-check',
            'RIDE_CANCELLED': 'fas fa-times',
        };
        return icons[type] || 'fas fa-bell';
    }

    function getNotificationColor(type) {
        const colors = {
            'SOS_ALERT': '#ef4444',
            'VERIFICATION_APPROVED': '#10b981',
            'VERIFICATION_REJECTED': '#ef4444',
            'ACCOUNT_SUSPENDED': '#f59e0b',
            'WARNING': '#f59e0b',
            'REPORT_RESOLVED': '#10b981',
            'RIDE_CANCELLED': '#6b7280',
        };
        return colors[type] || '#6366f1';
    }

    function getTimeAgo(date) {
        const seconds = Math.floor((new Date() - new Date(date)) / 1000);
        
        if (seconds < 60) return 'Just now';
        if (seconds < 3600) return Math.floor(seconds / 60) + ' minutes ago';
        if (seconds < 86400) return Math.floor(seconds / 3600) + ' hours ago';
        return Math.floor(seconds / 86400) + ' days ago';
    }

    async function markAsRead(notificationId) {
        try {
            await fetch(`/admin/notifications/${notificationId}/read`, {
                method: 'POST'
            });
            loadNotifications();
        } catch (error) {
            console.error('Failed to mark notification as read:', error);
        }
    }

    // Close dropdown when clicking outside
    document.addEventListener('click', function(event) {
        const container = document.getElementById('notificationContainer');
        if (container && !container.contains(event.target) && notificationsOpen) {
            toggleNotifications();
        }
    });

    // Load initial notification count
    loadNotifications();
    
    // Poll for new notifications every 30 seconds
    setInterval(loadNotifications, 30000);
</script>
