    </main>
    
    <!-- Footer -->
    <footer class="bg-gray-800 text-white mt-16">
        <div class="container mx-auto px-4 py-12">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
                <!-- About -->
                <div>
                    <div class="flex items-center space-x-2 mb-4">
                        <i class="fas fa-car text-primary text-2xl"></i>
                        <span class="text-2xl font-bold">LANE</span>
                    </div>
                    <p class="text-gray-400 text-sm">
                        Eco-friendly carpooling platform connecting riders and passengers for safer, greener journeys.
                    </p>
                    <div class="flex space-x-4 mt-4">
                        <a href="#" class="text-gray-400 hover:text-primary transition">
                            <i class="fab fa-facebook text-xl"></i>
                        </a>
                        <a href="#" class="text-gray-400 hover:text-primary transition">
                            <i class="fab fa-twitter text-xl"></i>
                        </a>
                        <a href="#" class="text-gray-400 hover:text-primary transition">
                            <i class="fab fa-instagram text-xl"></i>
                        </a>
                        <a href="#" class="text-gray-400 hover:text-primary transition">
                            <i class="fab fa-linkedin text-xl"></i>
                        </a>
                    </div>
                </div>
                
                <!-- Quick Links -->
                <div>
                    <h3 class="text-lg font-semibold mb-4">Quick Links</h3>
                    <ul class="space-y-2 text-sm">
                        <li><a href="/" class="text-gray-400 hover:text-primary transition">Home</a></li>
                        <li><a href="/rides/search" class="text-gray-400 hover:text-primary transition">Search Rides</a></li>
                        <li><a href="/auth/register" class="text-gray-400 hover:text-primary transition">Sign Up</a></li>
                        <li><a href="/auth/login" class="text-gray-400 hover:text-primary transition">Login</a></li>
                    </ul>
                </div>
                
                <!-- Support -->
                <div>
                    <h3 class="text-lg font-semibold mb-4">Support</h3>
                    <ul class="space-y-2 text-sm">
                        <li><a href="#" class="text-gray-400 hover:text-primary transition">Help Center</a></li>
                        <li><a href="#" class="text-gray-400 hover:text-primary transition">Safety Guidelines</a></li>
                        <li><a href="#" class="text-gray-400 hover:text-primary transition">Terms of Service</a></li>
                        <li><a href="#" class="text-gray-400 hover:text-primary transition">Privacy Policy</a></li>
                    </ul>
                </div>
                
                <!-- Contact -->
                <div>
                    <h3 class="text-lg font-semibold mb-4">Contact Us</h3>
                    <ul class="space-y-2 text-sm text-gray-400">
                        <li>
                            <i class="fas fa-envelope mr-2"></i>
                            support@lanecarpool.com
                        </li>
                        <li>
                            <i class="fas fa-phone mr-2"></i>
                            +91 99999 99999
                        </li>
                        <li>
                            <i class="fas fa-map-marker-alt mr-2"></i>
                            Mumbai, Maharashtra, India
                        </li>
                    </ul>
                </div>
            </div>
            
            <div class="border-t border-gray-700 mt-8 pt-8 text-center text-sm text-gray-400">
                <p>&copy; <%= new Date().getFullYear() %> LANE Carpool Platform. All rights reserved.</p>
                <p class="mt-2">Built with ‚ù§Ô∏è for a greener future üå±</p>
            </div>
        </div>
    </footer>
    
    <!-- Socket.IO -->
    <script src="/socket.io/socket.io.js"></script>
    
    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    
    <!-- Turf.js for geospatial calculations -->
    <script src="https://cdn.jsdelivr.net/npm/@turf/turf@6/turf.min.js"></script>
    
    <!-- Custom JavaScript -->
    <script src="/js/main.js"></script>
    <script src="/js/sos.js"></script>
    
    <!-- Initialize user socket connection -->
    <% if (user) { %>
    <script>
        // Join user's personal notification room
        socket.on('connect', () => {
            socket.emit('join-user', '<%= user._id %>');
            console.log('‚úÖ Joined personal notification room');
            
            // Load initial notification count
            loadNotificationCount();
        });
        
        // Load notification count
        async function loadNotificationCount() {
            try {
                const response = await fetch('/api/notifications/count');
                const data = await response.json();
                if (data.unreadCount > 0) {
                    const badge = document.getElementById('notificationBadge');
                    if (badge) {
                        badge.textContent = data.unreadCount > 99 ? '99+' : data.unreadCount;
                        badge.style.display = 'flex';
                    }
                }
            } catch (error) {
                console.error('Failed to load notification count:', error);
            }
        }
        
        // Load notifications list
        async function loadNotifications() {
            try {
                const response = await fetch('/api/notifications');
                const data = await response.json();
                
                const container = document.getElementById('notificationsList');
                if (!container) return;
                
                if (!data.notifications || data.notifications.length === 0) {
                    container.innerHTML = `
                        <div class="p-8 text-center text-gray-400">
                            <i class="fas fa-bell-slash text-4xl mb-2"></i>
                            <p class="text-sm">No notifications yet</p>
                        </div>
                    `;
                    return;
                }
                
                container.innerHTML = data.notifications.map(notif => `
                    <div class="p-4 border-b border-gray-100 hover:bg-gray-50 cursor-pointer ${!notif.isRead ? 'bg-blue-50' : ''}"
                         onclick="handleNotificationClick('${notif._id}', '${notif.data?.bookingId || notif.data?.rideId || '#'}')">
                        <div class="flex items-start space-x-3">
                            <div class="flex-shrink-0">
                                <i class="fas ${getNotificationIcon(notif.type)} text-primary text-lg"></i>
                            </div>
                            <div class="flex-1">
                                <p class="font-medium text-sm text-gray-800">${notif.title}</p>
                                <p class="text-xs text-gray-600 mt-1">${notif.message}</p>
                                <p class="text-xs text-gray-400 mt-1">${timeAgo(notif.createdAt)}</p>
                            </div>
                            ${!notif.isRead ? '<div class="flex-shrink-0"><span class="w-2 h-2 bg-blue-500 rounded-full block"></span></div>' : ''}
                        </div>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Failed to load notifications:', error);
            }
        }
        
        // Handle notification click
        async function handleNotificationClick(notificationId, targetId) {
            try {
                // Mark as read
                await fetch(`/api/notifications/${notificationId}/read`, { method: 'POST' });
                
                // Update count
                loadNotificationCount();
                
                // Navigate to target
                if (targetId && targetId !== '#') {
                    window.location.href = `/bookings/${targetId}`;
                }
            } catch (error) {
                console.error('Failed to mark notification as read:', error);
            }
        }
        
        // Mark all as read
        async function markAllAsRead() {
            try {
                await fetch('/api/notifications/mark-all-read', { method: 'POST' });
                loadNotificationCount();
                loadNotifications();
                LANEApp.showAlert('All notifications marked as read', 'success');
            } catch (error) {
                console.error('Failed to mark all as read:', error);
            }
        }
        
        // Get icon for notification type
        function getNotificationIcon(type) {
            const icons = {
                'BOOKING_REQUEST': 'fa-ticket-alt',
                'BOOKING_ACCEPTED': 'fa-check-circle',
                'BOOKING_REJECTED': 'fa-times-circle',
                'BOOKING_CANCELLED': 'fa-ban',
                'RIDE_STARTED': 'fa-play-circle',
                'RIDE_COMPLETED': 'fa-flag-checkered',
                'PAYMENT_RECEIVED': 'fa-money-bill-wave',
                'REVIEW_RECEIVED': 'fa-star',
                'MESSAGE_RECEIVED': 'fa-comment',
                'SOS_ALERT': 'fa-exclamation-triangle'
            };
            return icons[type] || 'fa-bell';
        }
        
        // Time ago function (using LANEApp if available)
        function timeAgo(dateString) {
            return window.LANEApp && window.LANEApp.timeAgo 
                ? window.LANEApp.timeAgo(dateString)
                : new Date(dateString).toLocaleString();
        }
    </script>
    <% } %>
    
    <!-- Auto-hide flash messages -->
    <script>
        setTimeout(() => {
            const alerts = document.querySelectorAll('[role="alert"]');
            alerts.forEach(alert => {
                alert.style.transition = 'opacity 0.5s';
                alert.style.opacity = '0';
                setTimeout(() => alert.remove(), 500);
            });
        }, 5000);
    </script>
</body>
</html>
