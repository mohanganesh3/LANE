<%- include('../partials/header') %>

<div class="pt-16 min-h-screen flex items-center justify-center bg-gradient-to-br from-green-50 to-blue-50 py-12">
    <div class="max-w-md w-full mx-4">
        <div class="bg-white rounded-2xl shadow-2xl p-8">
            <!-- Back Button -->
            <div class="mb-6">
                <a href="/auth/forgot-password" class="inline-flex items-center text-gray-600 hover:text-primary transition-colors">
                    <i class="fas fa-arrow-left mr-2"></i>
                    <span>Request New Code</span>
                </a>
            </div>

            <!-- Logo & Title -->
            <div class="text-center mb-8">
                <div class="flex items-center justify-center mb-4">
                    <div class="w-16 h-16 bg-gradient-to-br from-primary to-green-600 rounded-full flex items-center justify-center">
                        <i class="fas fa-key text-white text-2xl"></i>
                    </div>
                </div>
                <h2 class="text-2xl font-bold text-gray-800 mb-2">Reset Your Password</h2>
                <p class="text-gray-600 text-sm">Enter the code sent to your email and create a new password</p>
                <% if (email) { %>
                    <div class="mt-3 inline-flex items-center bg-green-50 px-4 py-2 rounded-full">
                        <i class="fas fa-envelope text-primary mr-2 text-sm"></i>
                        <span class="text-sm text-gray-700"><%= email %></span>
                    </div>
                <% } %>
            </div>
            
            <!-- Alert Messages -->
            <% if (typeof success !== 'undefined' && success && success.length) { %>
            <div class="mb-6 bg-green-50 border-l-4 border-green-500 p-4 rounded">
                <div class="flex items-start">
                    <i class="fas fa-check-circle text-green-500 mt-0.5 mr-3"></i>
                    <div>
                        <p class="text-green-800 font-semibold"><%= success[0] %></p>
                    </div>
                </div>
            </div>
            <% } %>
            <% if (typeof error !== 'undefined' && error && error.length) { %>
            <div class="mb-6 bg-red-50 border-l-4 border-red-500 p-4 rounded">
                <div class="flex items-start">
                    <i class="fas fa-exclamation-circle text-red-500 mt-0.5 mr-3"></i>
                    <div>
                        <p class="text-red-800 font-semibold"><%= error[0] %></p>
                    </div>
                </div>
            </div>
            <% } %>
            <div id="alertMessage" class="hidden mb-6"></div>
            
            <!-- Reset Password Form -->
            <form id="resetPasswordForm" class="space-y-6" method="POST" action="/auth/reset-password">
                <!-- OTP Code -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        <i class="fas fa-shield-alt mr-1 text-primary"></i>
                        Reset Code
                    </label>
                    <div class="relative">
                        <input type="text" name="otp" id="otp" required 
                            maxlength="6" pattern="[0-9]{6}"
                            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent text-center text-2xl font-bold tracking-widest"
                            placeholder="000000"
                            autocomplete="off">
                    </div>
                    <p class="mt-2 text-xs text-gray-500 flex items-center">
                        <i class="fas fa-clock mr-1"></i>
                        Code expires in <span id="timer" class="font-semibold ml-1">10:00</span>
                    </p>
                </div>

                <!-- New Password -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        <i class="fas fa-lock mr-1 text-primary"></i>
                        New Password
                    </label>
                    <div class="relative">
                        <input type="password" name="newPassword" id="newPassword" required 
                            minlength="8"
                            class="w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                            placeholder="Enter new password">
                        <button type="button" onclick="togglePassword('newPassword')" 
                            class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600">
                            <i class="fas fa-eye" id="newPassword-toggle"></i>
                        </button>
                    </div>
                    <!-- Password strength indicator -->
                    <div id="passwordStrength" class="mt-2 hidden">
                        <div class="h-2 bg-gray-200 rounded-full overflow-hidden">
                            <div id="strengthBar" class="h-full transition-all duration-300" style="width: 0%"></div>
                        </div>
                        <p id="strengthText" class="text-xs mt-1"></p>
                    </div>
                </div>

                <!-- Confirm Password -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        <i class="fas fa-lock mr-1 text-primary"></i>
                        Confirm New Password
                    </label>
                    <div class="relative">
                        <input type="password" name="confirmPassword" id="confirmPassword" required 
                            minlength="8"
                            class="w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                            placeholder="Confirm new password">
                        <button type="button" onclick="togglePassword('confirmPassword')" 
                            class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600">
                            <i class="fas fa-eye" id="confirmPassword-toggle"></i>
                        </button>
                    </div>
                    <p id="passwordMatch" class="mt-2 text-xs hidden"></p>
                </div>

                <!-- Password Requirements -->
                <div class="bg-blue-50 border-l-4 border-blue-500 p-4 rounded">
                    <p class="text-xs text-blue-700 font-semibold mb-2">Password Requirements:</p>
                    <ul class="text-xs text-blue-600 space-y-1" id="requirements">
                        <li id="req-length">
                            <i class="fas fa-circle text-gray-400 mr-2" style="font-size: 6px;"></i>
                            At least 8 characters
                        </li>
                        <li id="req-upper">
                            <i class="fas fa-circle text-gray-400 mr-2" style="font-size: 6px;"></i>
                            One uppercase letter
                        </li>
                        <li id="req-lower">
                            <i class="fas fa-circle text-gray-400 mr-2" style="font-size: 6px;"></i>
                            One lowercase letter
                        </li>
                        <li id="req-number">
                            <i class="fas fa-circle text-gray-400 mr-2" style="font-size: 6px;"></i>
                            One number
                        </li>
                    </ul>
                </div>
                
                <button type="submit" id="submitBtn"
                    class="w-full bg-gradient-to-r from-primary to-green-600 text-white py-3 rounded-lg hover:shadow-lg transform hover:-translate-y-0.5 transition-all duration-200 font-semibold flex items-center justify-center">
                    <i class="fas fa-check-circle mr-2"></i>
                    Reset Password
                </button>
            </form>
            
            <!-- Resend Code -->
            <div class="mt-6 text-center">
                <p class="text-sm text-gray-600">
                    Didn't receive the code?
                    <button id="resendBtn" class="text-primary hover:text-green-600 font-semibold ml-1">
                        Resend Code
                    </button>
                </p>
            </div>
        </div>

        <!-- Security Notice -->
        <div class="mt-6 text-center">
            <p class="text-xs text-gray-500 flex items-center justify-center">
                <i class="fas fa-lock mr-2"></i>
                Your password will be encrypted and stored securely
            </p>
        </div>
    </div>
</div>

<script>
// Toggle password visibility
function togglePassword(fieldId) {
    const field = document.getElementById(fieldId);
    const toggle = document.getElementById(`${fieldId}-toggle`);
    
    if (field.type === 'password') {
        field.type = 'text';
        toggle.classList.remove('fa-eye');
        toggle.classList.add('fa-eye-slash');
    } else {
        field.type = 'password';
        toggle.classList.remove('fa-eye-slash');
        toggle.classList.add('fa-eye');
    }
}

// OTP Input - Auto format
const otpInput = document.getElementById('otp');
otpInput.addEventListener('input', (e) => {
    e.target.value = e.target.value.replace(/[^0-9]/g, '');
});

// Password strength checker
const newPasswordInput = document.getElementById('newPassword');
const confirmPasswordInput = document.getElementById('confirmPassword');
const strengthIndicator = document.getElementById('passwordStrength');
const strengthBar = document.getElementById('strengthBar');
const strengthText = document.getElementById('strengthText');
const passwordMatch = document.getElementById('passwordMatch');

newPasswordInput.addEventListener('input', (e) => {
    const password = e.target.value;
    strengthIndicator.classList.remove('hidden');
    
    let strength = 0;
    let feedback = [];
    
    // Check length
    const reqLength = document.querySelector('#req-length i');
    if (password.length >= 8) {
        strength += 25;
        reqLength.className = 'fas fa-check-circle text-green-500 mr-2';
    } else {
        reqLength.className = 'fas fa-circle text-gray-400 mr-2';
    }
    
    // Check uppercase
    const reqUpper = document.querySelector('#req-upper i');
    if (/[A-Z]/.test(password)) {
        strength += 25;
        reqUpper.className = 'fas fa-check-circle text-green-500 mr-2';
    } else {
        reqUpper.className = 'fas fa-circle text-gray-400 mr-2';
    }
    
    // Check lowercase
    const reqLower = document.querySelector('#req-lower i');
    if (/[a-z]/.test(password)) {
        strength += 25;
        reqLower.className = 'fas fa-check-circle text-green-500 mr-2';
    } else {
        reqLower.className = 'fas fa-circle text-gray-400 mr-2';
    }
    
    // Check number
    const reqNumber = document.querySelector('#req-number i');
    if (/[0-9]/.test(password)) {
        strength += 25;
        reqNumber.className = 'fas fa-check-circle text-green-500 mr-2';
    } else {
        reqNumber.className = 'fas fa-circle text-gray-400 mr-2';
    }
    
    // Update strength bar
    strengthBar.style.width = strength + '%';
    
    if (strength < 50) {
        strengthBar.className = 'h-full bg-red-500 transition-all duration-300';
        strengthText.className = 'text-xs mt-1 text-red-600';
        strengthText.textContent = 'Weak password';
    } else if (strength < 75) {
        strengthBar.className = 'h-full bg-yellow-500 transition-all duration-300';
        strengthText.className = 'text-xs mt-1 text-yellow-600';
        strengthText.textContent = 'Medium strength';
    } else {
        strengthBar.className = 'h-full bg-green-500 transition-all duration-300';
        strengthText.className = 'text-xs mt-1 text-green-600';
        strengthText.textContent = 'Strong password';
    }
    
    // Check if passwords match
    checkPasswordMatch();
});

confirmPasswordInput.addEventListener('input', checkPasswordMatch);

function checkPasswordMatch() {
    const password = newPasswordInput.value;
    const confirm = confirmPasswordInput.value;
    
    if (confirm.length > 0) {
        passwordMatch.classList.remove('hidden');
        if (password === confirm) {
            passwordMatch.className = 'mt-2 text-xs text-green-600';
            passwordMatch.innerHTML = '<i class="fas fa-check-circle mr-1"></i> Passwords match';
        } else {
            passwordMatch.className = 'mt-2 text-xs text-red-600';
            passwordMatch.innerHTML = '<i class="fas fa-times-circle mr-1"></i> Passwords do not match';
        }
    } else {
        passwordMatch.classList.add('hidden');
    }
}

// Countdown timer (10 minutes)
let timeLeft = 600; // 10 minutes in seconds
const timerElement = document.getElementById('timer');

const countdown = setInterval(() => {
    timeLeft--;
    const minutes = Math.floor(timeLeft / 60);
    const seconds = timeLeft % 60;
    timerElement.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;
    
    // Change color when time is running out
    if (timeLeft <= 60) {
        timerElement.classList.add('text-red-600', 'font-bold');
    }
    
    if (timeLeft <= 0) {
        clearInterval(countdown);
        timerElement.textContent = 'Expired';
        timerElement.classList.add('text-red-600');
        
        // Show expired message
        const alertMessage = document.getElementById('alertMessage');
        alertMessage.className = 'mb-6 bg-red-50 border-l-4 border-red-500 p-4 rounded';
        alertMessage.innerHTML = `
            <div class="flex items-start">
                <i class="fas fa-exclamation-circle text-red-500 mt-0.5 mr-3"></i>
                <div>
                    <p class="text-red-800 font-semibold">Code Expired</p>
                    <p class="text-red-700 text-sm mt-1">Your reset code has expired. Please request a new one.</p>
                </div>
            </div>
        `;
        alertMessage.classList.remove('hidden');
        
        // Disable form
        document.getElementById('resetPasswordForm').querySelectorAll('input, button[type="submit"]').forEach(el => {
            el.disabled = true;
        });
    }
}, 1000);

// Handle form submission
document.getElementById('resetPasswordForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const submitBtn = document.getElementById('submitBtn');
    const alertMessage = document.getElementById('alertMessage');
    const formData = new FormData(e.target);
    const data = {
        otp: formData.get('otp'),
        newPassword: formData.get('newPassword'),
        confirmPassword: formData.get('confirmPassword')
    };
    
    // Validate passwords match
    if (data.newPassword !== data.confirmPassword) {
        alertMessage.className = 'mb-6 bg-red-50 border-l-4 border-red-500 p-4 rounded';
        alertMessage.innerHTML = `
            <div class="flex items-start">
                <i class="fas fa-exclamation-circle text-red-500 mt-0.5 mr-3"></i>
                <div>
                    <p class="text-red-800 font-semibold">Error</p>
                    <p class="text-red-700 text-sm mt-1">Passwords do not match</p>
                </div>
            </div>
        `;
        alertMessage.classList.remove('hidden');
        return;
    }
    
    // Disable button and show loading
    submitBtn.disabled = true;
    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i> Resetting Password...';
    
    // Hide previous messages
    alertMessage.classList.add('hidden');
    
    try {
        const response = await fetch('/auth/reset-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (result.success) {
            // Clear countdown
            clearInterval(countdown);
            
            // Show success message
            alertMessage.className = 'mb-6 bg-green-50 border-l-4 border-green-500 p-4 rounded animate-fade-in';
            alertMessage.innerHTML = `
                <div class="flex items-start">
                    <i class="fas fa-check-circle text-green-500 mt-0.5 mr-3"></i>
                    <div>
                        <p class="text-green-800 font-semibold">Success!</p>
                        <p class="text-green-700 text-sm mt-1">${result.message}</p>
                    </div>
                </div>
            `;
            alertMessage.classList.remove('hidden');
            
            // Redirect after 2 seconds
            setTimeout(() => {
                window.location.href = result.redirectUrl;
            }, 2000);
        } else {
            throw new Error(result.message || 'Failed to reset password');
        }
    } catch (error) {
        console.error('Error:', error);
        
        // Show error message
        alertMessage.className = 'mb-6 bg-red-50 border-l-4 border-red-500 p-4 rounded animate-fade-in';
        alertMessage.innerHTML = `
            <div class="flex items-start">
                <i class="fas fa-exclamation-circle text-red-500 mt-0.5 mr-3"></i>
                <div>
                    <p class="text-red-800 font-semibold">Error</p>
                    <p class="text-red-700 text-sm mt-1">${error.message}</p>
                </div>
            </div>
        `;
        alertMessage.classList.remove('hidden');
        
        // Re-enable button
        submitBtn.disabled = false;
        submitBtn.innerHTML = '<i class="fas fa-check-circle mr-2"></i> Reset Password';
    }
});

// Resend code button
document.getElementById('resendBtn').addEventListener('click', async () => {
    const btn = document.getElementById('resendBtn');
    btn.disabled = true;
    btn.textContent = 'Sending...';
    
    // Redirect to forgot password page to resend
    window.location.href = '/auth/forgot-password';
});

// Add animation CSS
const style = document.createElement('style');
style.textContent = `
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-10px); }
        to { opacity: 1; transform: translateY(0); }
    }
    .animate-fade-in {
        animation: fadeIn 0.3s ease-out;
    }
`;
document.head.appendChild(style);
</script>

<%- include('../partials/footer') %>
