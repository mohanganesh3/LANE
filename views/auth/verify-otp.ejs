<%- include('../partials/header') %>

<div class="pt-16 min-h-screen flex items-center justify-center bg-gradient-to-br from-green-50 to-blue-50 py-12">
    <div class="max-w-md w-full mx-4">
        <div class="bg-white rounded-2xl shadow-2xl p-8">
            <div class="text-center mb-8">
                <div class="w-20 h-20 bg-primary rounded-full flex items-center justify-center mx-auto mb-4">
                    <i class="fas fa-envelope text-white text-3xl"></i>
                </div>
                <h2 class="text-2xl font-bold text-gray-800">Verify OTP</h2>
                <p class="text-gray-600 mt-2">Enter the 6-digit code sent to your email</p>
            </div>
            
            <form id="otpForm" class="space-y-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2 text-center">Enter OTP</label>
                    <div class="flex justify-center space-x-2">
                        <input type="text" maxlength="6" name="otp" required
                            class="w-full text-center text-2xl font-bold px-4 py-3 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                            placeholder="000000" pattern="[0-9]{6}">
                    </div>
                </div>
                
                <button type="submit" 
                    class="w-full bg-primary hover:bg-green-600 text-white py-3 rounded-lg font-semibold transition">
                    <span id="verifyBtnText">Verify OTP</span>
                    <i class="fas fa-spinner fa-spin ml-2 hidden" id="verifySpinner"></i>
                </button>
            </form>
            
            <div class="mt-6 text-center">
                <p class="text-gray-600 text-sm mb-2">Didn't receive the code?</p>
                <button onclick="resendOTP()" id="resendBtn"
                    class="text-primary hover:text-green-600 font-semibold text-sm">
                    Resend OTP
                </button>
                <p class="text-xs text-gray-500 mt-2">
                    <i class="fas fa-clock mr-1"></i>
                    <span id="countdown">Resend available in <span id="timer">60</span>s</span>
                </p>
            </div>
        </div>
    </div>
</div>

<script>
    let countdown = 60;
    const timer = setInterval(() => {
        countdown--;
        document.getElementById('timer').textContent = countdown;
        
        if (countdown <= 0) {
            clearInterval(timer);
            document.getElementById('countdown').textContent = 'You can resend now';
            document.getElementById('resendBtn').disabled = false;
        }
    }, 1000);
    
    document.getElementById('otpForm').addEventListener('submit', function (e) {
        e.preventDefault();

        const btnText = document.getElementById('verifyBtnText');
        const spinner = document.getElementById('verifySpinner');
        btnText.textContent = 'Verifying...';
        spinner.classList.remove('hidden');

        const fd = new FormData(e.target);
        const data = Object.fromEntries(fd);

        const xhr = new XMLHttpRequest();
        xhr.open('POST', '/auth/verify-otp', true);
        xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');

        xhr.onload = function () {
            spinner.classList.add('hidden');
            try {
                const res = JSON.parse(xhr.responseText);
                if (xhr.status >= 200 && xhr.status < 300 && res.success) {
                    showAlert('Verification successful!', 'success');
                    setTimeout(function () {
                        window.location.href = res.redirectUrl || '/user/dashboard';
                    }, 1000);
                } else {
                    showAlert(res.message || 'Invalid OTP', 'error');
                    btnText.textContent = 'Verify OTP';
                }
            } catch (err) {
                showAlert('Invalid server response', 'error');
                btnText.textContent = 'Verify OTP';
            }
        };

        xhr.onerror = function () {
            spinner.classList.add('hidden');
            btnText.textContent = 'Verify OTP';
            showAlert('Network error. Please try again.', 'error');
        };

        xhr.send(JSON.stringify(data));
    });

    function resendOTP() {
        const resendBtn = document.getElementById('resendBtn');
        resendBtn.disabled = true;

        const xhr = new XMLHttpRequest();
        xhr.open('POST', '/auth/resend-otp', true);
        xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');

        xhr.onload = function () {
            try {
                const res = JSON.parse(xhr.responseText);
                if (xhr.status >= 200 && xhr.status < 300 && res.success) {
                    showAlert('New OTP sent!', 'success');
                    countdown = 60;
                } else {
                    showAlert(res.message || 'Failed to resend OTP', 'error');
                    // If server rejected due to rate limit, keep button disabled until timer allows
                }
            } catch (err) {
                showAlert('Invalid server response', 'error');
            }
        };

        xhr.onerror = function () {
            showAlert('Failed to resend OTP', 'error');
        };

        xhr.send();
    }
</script>

<%- include('../partials/footer') %>
